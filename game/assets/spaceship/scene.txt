wmWindowManager (code:WM|@2196366326024) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WMWinMan";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 2097155;
        recalc_up_to_undo_push: int = 2097155;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 255;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 1;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    windrawable: wmWindow = wmWindow (@2196366388744) {
        next: wmWindow = null;
        prev: wmWindow = null;
        ghostwin: void = null;
        gpuctx: void = null;
        parent: wmWindow = null;
        scene: Scene = (@2196477755528);
        new_scene: Scene = null;
        view_layer_name: char[64] = "ViewLayer";
        unpinned_scene: Scene = (@2196477755528);
        workspace_hook: WorkSpaceInstanceHook = WorkSpaceInstanceHook (@2196372225336) {
            active: WorkSpace = (@2196477806856);
            act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                next: WorkSpaceLayout = null;
                prev: WorkSpaceLayout = null;
                screen: bScreen = (@2196366386056);
                name: char[64] = "Default";
            }
            temp_workspace_store: WorkSpace = null;
            temp_layout_store: WorkSpaceLayout = null;
        }
        global_area_map: ScrAreaMap {
            vertbase: ListBase<ScrVert>[?] = [
                ScrVert (@2196372223656) {
                    next: ScrVert = (@2196372223752);
                    prev: ScrVert = null;
                    newv: ScrVert = null;
                    vec: vec2s {
                        x: short = 0;
                        y: short = 1314;
                    }
                    flag: short = 1;
                    editflag: short = 1;
                }
            ];
            edgebase: ListBase<ScrEdge>[?] = [
                ScrEdge (@2196372223992) {
                    next: ScrEdge = (@2196372224040);
                    prev: ScrEdge = null;
                    v1: ScrVert = (@2196372223656);
                    v2: ScrVert = ScrVert (@2196372223752) {
                        next: ScrVert = (@2196372221640);
                        prev: ScrVert = (@2196372223656);
                        newv: ScrVert = null;
                        vec: vec2s {
                            x: short = 0;
                            y: short = 1340;
                        }
                        flag: short = 0;
                        editflag: short = 0;
                    }
                    border: short = 0;
                    flag: short = 0;
                }
            ];
            areabase: ListBase<ScrArea>[?] = [
                ScrArea (@2196371283912) {
                    next: ScrArea = (@2196371284104);
                    prev: ScrArea = null;
                    v1: ScrVert = (@2196372223656);
                    v2: ScrVert = (@2196372223752);
                    v3: ScrVert = ScrVert (@2196372221640) {
                        next: ScrVert = (@2196372224520);
                        prev: ScrVert = (@2196372223752);
                        newv: ScrVert = null;
                        vec: vec2s {
                            x: short = 2557;
                            y: short = 1340;
                        }
                        flag: short = 0;
                        editflag: short = 0;
                    }
                    v4: ScrVert = ScrVert (@2196372224520) {
                        next: ScrVert = (@2196372224472);
                        prev: ScrVert = (@2196372221640);
                        newv: ScrVert = null;
                        vec: vec2s {
                            x: short = 2557;
                            y: short = 1314;
                        }
                        flag: short = 1;
                        editflag: short = 1;
                    }
                    full: bScreen = null;
                    totrct: rcti {
                        xmin: int = 0;
                        xmax: int = 2557;
                        ymin: int = 1308;
                        ymax: int = 1340;
                    }
                    spacetype: char = 21;
                    butspacetype: char = 21;
                    butspacetype_subtype: short = 0;
                    winx: short = 2558;
                    winy: short = 33;
                    headertype: char = 0;
                    do_refresh: char = 0;
                    flag: short = 0;
                    region_active_win: short = -1;
                    type: SpaceType = null;
                    global: ScrGlobalAreaData = ScrGlobalAreaData (@2196467725928) {
                        cur_fixed_height: short = 26;
                        size_min: short = 26;
                        size_max: short = 26;
                        align: short = 0;
                        flag: short = 0;
                    }
                    spacedata: ListBase<SpaceTopBar>[?] = [
                        SpaceTopBar (@2196372222696) {
                            next: SpaceLink = null;
                            prev: SpaceLink = null;
                            regionbase: ListBase<unknown>[] = null;
                            spacetype: char = 21;
                            link_flag: char = 0;
                        }
                    ];
                    regionbase: ListBase<ARegion>[?] = [
                        ARegion (@2196358844168) {
                            next: ARegion = (@2196358843720);
                            prev: ARegion = null;
                            v2d: View2D {
                                tot: rctf {
                                    xmin: float = 0;
                                    xmax: float = 1386;
                                    ymin: float = 0;
                                    ymax: float = 32;
                                }
                                cur: rctf {
                                    xmin: float = 0;
                                    xmax: float = 2053;
                                    ymin: float = 0;
                                    ymax: float = 32;
                                }
                                vert: rcti {
                                    xmin: int = 0;
                                    xmax: int = 0;
                                    ymin: int = 0;
                                    ymax: int = 0;
                                }
                                hor: rcti {
                                    xmin: int = 0;
                                    xmax: int = 0;
                                    ymin: int = 0;
                                    ymax: int = 0;
                                }
                                mask: rcti {
                                    xmin: int = 0;
                                    xmax: int = 2052;
                                    ymin: int = 0;
                                    ymax: int = 31;
                                }
                                min: float[2] = [3339.0, 25.0];
                                max: float[2] = [3339.0, 25.0];
                                minzoom: float = 1;
                                maxzoom: float = 1;
                                scroll: short = 0;
                                scroll_ui: short = 0;
                                keeptot: short = 2;
                                keepzoom: short = 771;
                                keepofs: short = 4;
                                flag: short = 1024;
                                align: short = 10;
                                winx: short = 2053;
                                winy: short = 32;
                                oldwinx: short = 2053;
                                oldwiny: short = 32;
                                around: short = 0;
                                alpha_vert: char = -1;
                                alpha_hor: char = -1;
                                page_size_y: float = 0;
                                sms: SmoothView2DStore = null;
                                smooth_timer: wmTimer = null;
                            }
                            winrct: rcti {
                                xmin: int = 0;
                                xmax: int = 2052;
                                ymin: int = 1309;
                                ymax: int = 1340;
                            }
                            drawrct: rcti {
                                xmin: int = 0;
                                xmax: int = 0;
                                ymin: int = 0;
                                ymax: int = 0;
                            }
                            winx: short = 2053;
                            winy: short = 32;
                            category_scroll: int = 0;
                            visible: short = 1;
                            regiontype: short = 1;
                            alignment: short = 1;
                            flag: short = 0;
                            sizex: short = 2046;
                            sizey: short = 26;
                            do_draw: short = 0;
                            do_draw_paintcursor: short = 0;
                            overlap: short = 0;
                            flagfullscreen: short = 0;
                            type: ARegionType = null;
                            uiblocks: ListBase<unknown>[] = null;
                            panels: ListBase<unknown>[] = null;
                            panels_category_active: ListBase<unknown>[] = null;
                            ui_lists: ListBase<unknown>[] = null;
                            ui_previews: ListBase<unknown>[] = null;
                            handlers: ListBase<unknown>[] = null;
                            panels_category: ListBase<unknown>[] = null;
                            gizmo_map: wmGizmoMap = null;
                            regiontimer: wmTimer = null;
                            draw_buffer: wmDrawBuffer = null;
                            headerstr: char = null;
                            regiondata: void = null;
                            runtime: ARegion_Runtime {
                                category: char = null;
                                visible_rect: rcti {
                                    xmin: int = 0;
                                    xmax: int = 0;
                                    ymin: int = 0;
                                    ymax: int = 0;
                                }
                                offset_x: int = 0;
                                offset_y: int = 0;
                                block_name_map: GHash = null;
                            }
                        }
                    ];
                    handlers: ListBase<unknown>[] = null;
                    actionzones: ListBase<unknown>[] = null;
                    runtime: ScrArea_Runtime {
                        tool: bToolRef = null;
                        is_tool_set: char = 1;
                    }
                }
            ];
        }
        screen: bScreen = (@2196366386056);
        winid: int = 1;
        posx: short = 1281;
        posy: short = 61;
        sizex: short = 2558;
        sizey: short = 1341;
        windowstate: char = 1;
        active: char = 1;
        cursor: short = 3;
        lastcursor: short = 1;
        modalcursor: short = 3;
        grabcursor: short = 0;
        pie_event_type_lock: short = 0;
        pie_event_type_last: short = 0;
        addmousemove: char = 1;
        tag_cursor_refresh: char = 1;
        event_queue_check_click: char = 0;
        event_queue_check_drag: char = 0;
        event_queue_check_drag_handled: char = 0;
        event_queue_consecutive_gesture_type: char = 0;
        event_queue_consecutive_gesture_xy: int[2] = [1253, 628];
        event_queue_consecutive_gesture_data: wmEvent_ConsecutiveData = null;
        eventstate: wmEvent = null;
        event_last_handled: wmEvent = null;
        ime_data: wmIMEData = null;
        event_queue: ListBase<unknown>[] = null;
        handlers: ListBase<unknown>[] = null;
        modalhandlers: ListBase<unknown>[] = null;
        gesture: ListBase<unknown>[] = null;
        stereo3d_format: Stereo3dFormat = Stereo3dFormat (@2196373806040) {
            flag: short = 0;
            display_mode: char = 0;
            anaglyph_type: char = 0;
            interlace_type: char = 0;
        }
        drawcalls: ListBase<unknown>[] = null;
        cursor_keymap_status: void = null;
    }
    winactive: wmWindow = (@2196366388744);
    windows: ListBase<wmWindow>[?] = [
        @2196366388744,
    ];
    init_flag: uchar = 3;
    file_saved: short = 0;
    op_undo_depth: short = 0;
    outliner_sync_select_dirty: short = 0;
    operators: ListBase<unknown>[] = null;
    notifier_queue: ListBase<unknown>[] = null;
    notifier_queue_set: GSet = null;
    reports: ReportList {
        list: ListBase<unknown>[] = null;
        printlevel: int = 32;
        storelevel: int = 2;
        flag: int = 2;
        reporttimer: wmTimer = null;
    }
    jobs: ListBase<unknown>[] = null;
    paintcursors: ListBase<unknown>[] = null;
    drags: ListBase<unknown>[] = null;
    keyconfigs: ListBase<unknown>[] = null;
    defaultconf: wmKeyConfig = null;
    addonconf: wmKeyConfig = null;
    userconf: wmKeyConfig = null;
    timers: ListBase<unknown>[] = null;
    autosavetimer: wmTimer = null;
    undo_stack: UndoStack = null;
    is_interface_locked: char = 0;
    message_bus: wmMsgBus = null;
    xr: wmXrData {
        runtime: wmXrRuntimeData = null;
        session_settings: XrSessionSettings {
            shading: View3DShading {
                type: char = 3;
                prev_type: char = 3;
                prev_type_wire: char = 0;
                color_type: char = 0;
                flag: short = 13072;
                light: char = 1;
                background_type: char = 0;
                cavity_type: char = 1;
                wire_color_type: char = 0;
                use_compositor: char = 0;
                studio_light: char[256] = "";
                lookdev_light: char[256] = "";
                matcap: char[256] = "";
                shadow_intensity: float = 0.5;
                single_color: float[3] = [0.8, 0.8, 0.8];
                studiolight_rot_z: float = 0;
                studiolight_background: float = 0;
                studiolight_intensity: float = 1;
                studiolight_blur: float = 0;
                object_outline_color: float[3] = [0.0, 0.0, 0.0];
                xray_alpha: float = 0.5;
                xray_alpha_wire: float = 0.5;
                cavity_valley_factor: float = 1;
                cavity_ridge_factor: float = 1;
                background_color: float[3] = [0.05, 0.05, 0.05];
                curvature_ridge_factor: float = 1;
                curvature_valley_factor: float = 1;
                render_pass: int = 1;
                aov_name: char[64] = "";
                prop: IDProperty = null;
            }
            base_scale: float = 1;
            base_pose_type: char = 0;
            base_pose_object: Object = null;
            base_pose_location: float[3] = [0.0, 0.0, 0.0];
            base_pose_angle: float = 0;
            draw_flags: char = 61;
            controller_draw_style: char = 0;
            clip_start: float = 0.01;
            clip_end: float = 1000;
            flag: int = 1;
            object_type_exclude_viewport: int = 0;
            object_type_exclude_select: int = 0;
        }
    }
}
WorkSpace (code:WS|@2196477807816) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSAnimation";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 256;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467272296) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366387976);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224280) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467272296);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371284296) {
            next: bToolRef = null;
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 16;
            properties: IDProperty = IDProperty (@2196477753640) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "WM_toolsystem_ref_properties_ensure_idprops";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477753480) {
                            next: IDProperty = null;
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "builtin.select_box";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477753320) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 6;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "VIEW3D_OT_select_box";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<unknown>[] = null;
                                            val: int = 0;
                                            val2: int = 0;
                                        }
                                        len: int = 0;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 1;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 64;
    flags: int = 0;
    order: int = 6;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477807496) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSCompositing";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 257;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467273736) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366389512);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224232) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467273736);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371284488) {
            next: bToolRef = null;
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 16;
            mode: int = 0;
            properties: IDProperty = IDProperty (@2196477753160) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "WM_toolsystem_ref_properties_ensure_idprops";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477753000) {
                            next: IDProperty = null;
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "builtin.select_box";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477752840) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 6;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "NODE_OT_select_box";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<unknown>[] = null;
                                            val: int = 0;
                                            val2: int = 0;
                                        }
                                        len: int = 0;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 1;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 8;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477807176) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSGeometry Nodes";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 258;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467274888) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366389128);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224136) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467274888);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<unknown>[] = null;
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 9;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477806856) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSLayout";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 259;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 1;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467271048) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366386056);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224712) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = (@2196467271048);
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467271048);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371284680) {
            next: bToolRef = (@2196371284872);
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 0;
            properties: IDProperty = IDProperty (@2196477752680) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "WM_toolsystem_ref_properties_ensure_idprops";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477752520) {
                            next: IDProperty = (@2196477752040);
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "builtin.select_box";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477752360) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 6;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "VIEW3D_OT_select_box";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<IDProperty>[?] = [
                                                IDProperty (@2196477752200) {
                                                    next: IDProperty = null;
                                                    prev: IDProperty = null;
                                                    type: char = 1;
                                                    subtype: char = 0;
                                                    flag: short = 0;
                                                    name: char[64] = "mode";
                                                    data: IDPropertyData {
                                                        pointer: void = null;
                                                        group: ListBase<unknown>[] = null;
                                                        val: int = 1;
                                                        val2: int = 0;
                                                    }
                                                    len: int = 0;
                                                    totallen: int = 0;
                                                    ui_data: IDPropertyUIData = null;
                                                }
                                            ];
                                            val: int = 0;
                                            val2: int = 0;
                                        }
                                        len: int = 1;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 4;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 0;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477806536) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSModeling";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 260;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467272200) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366381448);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224424) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467272200);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<unknown>[] = null;
    pin_scene: Scene = null;
    object_mode: int = 1;
    flags: int = 0;
    order: int = 1;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477806216) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSRendering";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 261;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467272488) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366382600);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372225192) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467272488);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371285064) {
            next: bToolRef = null;
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 16;
            properties: IDProperty = null;
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 7;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477805896) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSScripting";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 262;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467273160) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366382216);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372225096) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467273160);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<unknown>[] = null;
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 10;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477805576) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSSculpting";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 263;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467275464) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366380680);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372225144) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467275464);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371285256) {
            next: bToolRef = (@2196371285448);
            prev: bToolRef = null;
            idname: char[64] = "builtin_brush.Draw";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 11;
            properties: IDProperty = null;
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 2;
    flags: int = 0;
    order: int = 2;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477805256) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSShading";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 264;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 1;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467272680) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366379144);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372225048) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467272680);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371285640) {
            next: bToolRef = (@2196371285832);
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 0;
            properties: IDProperty = IDProperty (@2196477750280) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "WM_toolsystem_ref_properties_ensure_idprops";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477750120) {
                            next: IDProperty = null;
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "builtin.select_box";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477749960) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 6;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "VIEW3D_OT_select_box";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<unknown>[] = null;
                                            val: int = 0;
                                            val2: int = 0;
                                        }
                                        len: int = 0;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 1;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 0;
    flags: int = 0;
    order: int = 5;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477804936) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSTexture Paint";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 265;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467273352) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366383752);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372225000) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467273352);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<unknown>[] = null;
    pin_scene: Scene = null;
    object_mode: int = 16;
    flags: int = 0;
    order: int = 4;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
WorkSpace (code:WS|@2196477705928) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WSUV Editing";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 266;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    layouts: ListBase<WorkSpaceLayout>[?] = [
        WorkSpaceLayout (@2196467271528) {
            next: WorkSpaceLayout = null;
            prev: WorkSpaceLayout = null;
            screen: bScreen = (@2196366382984);
            name: char[64] = "Default";
        }
    ];
    hook_layout_relations: ListBase<WorkSpaceDataRelation>[?] = [
        WorkSpaceDataRelation (@2196372224952) {
            next: WorkSpaceDataRelation = null;
            prev: WorkSpaceDataRelation = null;
            parent: void = WorkSpaceInstanceHook (@2196372225336) {
                active: WorkSpace = (@2196477806856);
                act_layout: WorkSpaceLayout = WorkSpaceLayout (@2196467271048) {
                    next: WorkSpaceLayout = null;
                    prev: WorkSpaceLayout = null;
                    screen: bScreen = (@2196366386056);
                    name: char[64] = "Default";
                }
                temp_workspace_store: WorkSpace = null;
                temp_layout_store: WorkSpaceLayout = null;
            }
            value: void = (@2196467271528);
            parentid: int = 1;
        }
    ];
    owner_ids: ListBase<unknown>[] = null;
    tools: ListBase<bToolRef>[?] = [
        bToolRef (@2196371286216) {
            next: bToolRef = (@2196371286408);
            prev: bToolRef = null;
            idname: char[64] = "builtin.select_box";
            idname_fallback: char[64] = "";
            tag: short = 0;
            space_type: short = 1;
            mode: int = 16;
            properties: IDProperty = IDProperty (@2196477748840) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "WM_toolsystem_ref_properties_ensure_idprops";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477748680) {
                            next: IDProperty = null;
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "builtin.select_box";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477748520) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 6;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "VIEW3D_OT_select_box";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<unknown>[] = null;
                                            val: int = 0;
                                            val2: int = 0;
                                        }
                                        len: int = 0;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 1;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            runtime: bToolRef_Runtime = null;
        }
    ];
    pin_scene: Scene = null;
    object_mode: int = 1;
    flags: int = 0;
    order: int = 3;
    status_text: char = null;
    asset_library_ref: AssetLibraryReference {
        type: short = 1;
        custom_library_index: int = -1;
    }
    viewer_path: ViewerPath {
        path: ListBase<unknown>[] = null;
    }
}
bScreen (code:SN|@2196366387976) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRAnimation";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 267;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196372224856) {
            next: ScrVert = (@2196372225384);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367235960) {
            next: ScrEdge = (@2196367235192);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196372225384) {
                next: ScrVert = (@2196372225432);
                prev: ScrVert = (@2196372224856);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196372225528) {
                next: ScrVert = (@2196372225576);
                prev: ScrVert = (@2196372225480);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 1;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371286792) {
            next: ScrArea = (@2196371286984);
            prev: ScrArea = null;
            v1: ScrVert = (@2196372225528);
            v2: ScrVert = ScrVert (@2196372225624) {
                next: ScrVert = (@2196372225672);
                prev: ScrVert = (@2196372225576);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 1082;
                }
                flag: short = 0;
                editflag: short = 1;
            }
            v3: ScrVert = ScrVert (@2196372225672) {
                next: ScrVert = (@2196372225720);
                prev: ScrVert = (@2196372225624);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 1082;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196372225384);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2114;
                xmax: int = 2557;
                ymin: int = 25;
                ymax: int = 1081;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 444;
            winy: short = 1057;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480286728) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 3;
                    mainbo: short = 3;
                    mainbuser: short = 3;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196358842376) {
                    next: ARegion = (@2196358841928);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 444;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 443;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 444;
                        winy: short = 32;
                        oldwinx: short = 444;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2114;
                        xmax: int = 2557;
                        ymin: int = 1050;
                        ymax: int = 1081;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 444;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 355;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 0;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366389512) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRCompositing";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 268;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196367229192) {
            next: ScrVert = (@2196367229240);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367229960) {
            next: ScrEdge = (@2196367230008);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196367229240) {
                next: ScrVert = (@2196367229288);
                prev: ScrVert = (@2196367229192);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2559;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196367229384) {
                next: ScrVert = (@2196367229432);
                prev: ScrVert = (@2196367229336);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2115;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371287944) {
            next: ScrArea = (@2196371288136);
            prev: ScrArea = null;
            v1: ScrVert = (@2196367229384);
            v2: ScrVert = ScrVert (@2196367229480) {
                next: ScrVert = (@2196367229624);
                prev: ScrVert = (@2196367229432);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2115;
                    y: short = 1090;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196367229624) {
                next: ScrVert = (@2196367229672);
                prev: ScrVert = (@2196367229480);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2559;
                    y: short = 1090;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196367229240);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2116;
                xmax: int = 2559;
                ymin: int = 25;
                ymax: int = 1089;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 444;
            winy: short = 1065;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480286472) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 0;
                    mainbo: short = 0;
                    mainbuser: short = 0;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 93695;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196466876680) {
                    next: ARegion = (@2196466877128);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 444;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 443;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 444;
                        winy: short = 32;
                        oldwinx: short = 444;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2116;
                        xmax: int = 2559;
                        ymin: int = 1058;
                        ymax: int = 1089;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 444;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 355;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366389128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRGeometry Nodes";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 269;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196367230776) {
            next: ScrVert = (@2196367230824);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 19;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367231352) {
            next: ScrEdge = (@2196367231400);
            prev: ScrEdge = null;
            v1: ScrVert = (@2196367230776);
            v2: ScrVert = ScrVert (@2196367230968) {
                next: ScrVert = (@2196367231016);
                prev: ScrVert = (@2196367230920);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371288904) {
            next: ScrArea = (@2196371289096);
            prev: ScrArea = null;
            v1: ScrVert = (@2196367230968);
            v2: ScrVert = ScrVert (@2196367231256) {
                next: ScrVert = (@2196367229528);
                prev: ScrVert = (@2196367231208);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 758;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196367229528) {
                next: ScrVert = (@2196367229576);
                prev: ScrVert = (@2196367231256);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 758;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = ScrVert (@2196367230824) {
                next: ScrVert = (@2196367230872);
                prev: ScrVert = (@2196367230776);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 1587;
                xmax: int = 1919;
                ymin: int = 20;
                ymax: int = 757;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 333;
            winy: short = 738;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480286216) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 10;
                    mainbo: short = 10;
                    mainbuser: short = 10;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477669896) {
                    next: ARegion = (@2196477669448);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 236;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 333;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 332;
                            ymin: int = 0;
                            ymax: int = 25;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 333;
                        winy: short = 26;
                        oldwinx: short = 333;
                        oldwiny: short = 26;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 1587;
                        xmax: int = 1919;
                        ymin: int = 732;
                        ymax: int = 757;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 333;
                    winy: short = 26;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 0;
                    sizey: short = 0;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 1;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366386056) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRLayout";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 270;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196367232456) {
            next: ScrVert = (@2196367232504);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367232936) {
            next: ScrEdge = (@2196367232984);
            prev: ScrEdge = null;
            v1: ScrVert = (@2196367232456);
            v2: ScrVert = ScrVert (@2196367232648) {
                next: ScrVert = (@2196367232696);
                prev: ScrVert = (@2196367232600);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371289864) {
            next: ScrArea = (@2196371290248);
            prev: ScrArea = null;
            v1: ScrVert = (@2196367232648);
            v2: ScrVert = ScrVert (@2196367232744) {
                next: ScrVert = (@2196367232792);
                prev: ScrVert = (@2196367232696);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 552;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196367232792) {
                next: ScrVert = (@2196367232840);
                prev: ScrVert = (@2196367232744);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 552;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = ScrVert (@2196367232504) {
                next: ScrVert = (@2196367232552);
                prev: ScrVert = (@2196367232456);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2114;
                xmax: int = 2557;
                ymin: int = 25;
                ymax: int = 551;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 444;
            winy: short = 527;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 256;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480285960) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 3;
                    mainbo: short = 3;
                    mainbuser: short = 3;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477623880) {
                    next: ARegion = (@2196477623432);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 444;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 443;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 444;
                        winy: short = 32;
                        oldwinx: short = 444;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2114;
                        xmax: int = 2557;
                        ymin: int = 520;
                        ymax: int = 551;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 444;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 1;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 355;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 1;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 0;
    winid: short = 1;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 1;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366381448) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRModeling";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 271;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196367233608) {
            next: ScrVert = (@2196367233656);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 19;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367233992) {
            next: ScrEdge = (@2196367234040);
            prev: ScrEdge = null;
            v1: ScrVert = (@2196367233608);
            v2: ScrVert = ScrVert (@2196367233800) {
                next: ScrVert = (@2196367233848);
                prev: ScrVert = (@2196367233752);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 19;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371291016) {
            next: ScrArea = (@2196371291208);
            prev: ScrArea = null;
            v1: ScrVert = (@2196367233800);
            v2: ScrVert = ScrVert (@2196367233896) {
                next: ScrVert = (@2196367233944);
                prev: ScrVert = (@2196367233848);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 871;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v3: ScrVert = ScrVert (@2196367233944) {
                next: ScrVert = null;
                prev: ScrVert = (@2196367233896);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 871;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = ScrVert (@2196367233656) {
                next: ScrVert = (@2196367233704);
                prev: ScrVert = (@2196367233608);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 1587;
                xmax: int = 1919;
                ymin: int = 20;
                ymax: int = 870;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 333;
            winy: short = 851;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480285704) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 10;
                    mainbo: short = 10;
                    mainbuser: short = 10;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224703;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477610888) {
                    next: ARegion = (@2196477610440);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 236;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 333;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 332;
                            ymin: int = 0;
                            ymax: int = 25;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 333;
                        winy: short = 26;
                        oldwinx: short = 333;
                        oldwiny: short = 26;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 1587;
                        xmax: int = 1919;
                        ymin: int = 845;
                        ymax: int = 870;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 333;
                    winy: short = 26;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 0;
                    sizey: short = 0;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 0;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366382600) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRRendering";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 272;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196367234520) {
            next: ScrVert = (@2196367234568);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196367234904) {
            next: ScrEdge = (@2196367234952);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196367234568) {
                next: ScrVert = (@2196367234616);
                prev: ScrVert = (@2196367234520);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196367234712) {
                next: ScrVert = (@2196367234760);
                prev: ScrVert = (@2196367234664);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371291592) {
            next: ScrArea = (@2196371291784);
            prev: ScrArea = null;
            v1: ScrVert = (@2196367234712);
            v2: ScrVert = ScrVert (@2196367234760) {
                next: ScrVert = (@2196367234808);
                prev: ScrVert = (@2196367234712);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 1308;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196367234664) {
                next: ScrVert = (@2196367234712);
                prev: ScrVert = (@2196367234616);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 1308;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196367234568);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2114;
                xmax: int = 2557;
                ymin: int = 25;
                ymax: int = 1307;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 444;
            winy: short = 1283;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480285448) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 0;
                    mainbo: short = 0;
                    mainbuser: short = 0;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477555656) {
                    next: ARegion = (@2196477555208);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 444;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 443;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 444;
                        winy: short = 32;
                        oldwinx: short = 444;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2114;
                        xmax: int = 2557;
                        ymin: int = 1276;
                        ymax: int = 1307;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 444;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 355;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366382216) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRScripting";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 273;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196370731800) {
            next: ScrVert = (@2196370731848);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 19;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196370732568) {
            next: ScrEdge = (@2196370732616);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196370731848) {
                next: ScrVert = (@2196370731896);
                prev: ScrVert = (@2196370731800);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196370731992) {
                next: ScrVert = (@2196370732040);
                prev: ScrVert = (@2196370731944);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196371276040) {
            next: ScrArea = (@2196371278344);
            prev: ScrArea = null;
            v1: ScrVert = (@2196370731992);
            v2: ScrVert = ScrVert (@2196370732184) {
                next: ScrVert = (@2196370732232);
                prev: ScrVert = (@2196370732136);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 628;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196370732232) {
                next: ScrVert = (@2196370732280);
                prev: ScrVert = (@2196370732184);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 628;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196370731848);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 1587;
                xmax: int = 1919;
                ymin: int = 20;
                ymax: int = 627;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 333;
            winy: short = 608;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480285192) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 0;
                    mainbo: short = 0;
                    mainbuser: short = 0;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477550280) {
                    next: ARegion = (@2196477549832);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 236;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 333;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 332;
                            ymin: int = 0;
                            ymax: int = 25;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 333;
                        winy: short = 26;
                        oldwinx: short = 333;
                        oldwiny: short = 26;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 1587;
                        xmax: int = 1919;
                        ymin: int = 602;
                        ymax: int = 627;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 333;
                    winy: short = 26;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 0;
                    sizey: short = 0;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366380680) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRSculpting";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 274;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196370733768) {
            next: ScrVert = (@2196370733816);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196370734152) {
            next: ScrEdge = (@2196370734200);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196370733816) {
                next: ScrVert = (@2196370733864);
                prev: ScrVert = (@2196370733768);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196370733960) {
                next: ScrVert = (@2196370734008);
                prev: ScrVert = (@2196370733912);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196477525448) {
            next: ScrArea = (@2196477525256);
            prev: ScrArea = null;
            v1: ScrVert = (@2196370733960);
            v2: ScrVert = ScrVert (@2196370734056) {
                next: ScrVert = (@2196370734104);
                prev: ScrVert = (@2196370734008);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2113;
                    y: short = 1081;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v3: ScrVert = ScrVert (@2196370734104) {
                next: ScrVert = null;
                prev: ScrVert = (@2196370734056);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2557;
                    y: short = 1081;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196370733816);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2114;
                xmax: int = 2557;
                ymin: int = 25;
                ymax: int = 1080;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 444;
            winy: short = 1056;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480284936) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 14;
                    mainbo: short = 14;
                    mainbuser: short = 14;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477540168) {
                    next: ARegion = (@2196477539720);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 444;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 443;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 444;
                        winy: short = 32;
                        oldwinx: short = 444;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2114;
                        xmax: int = 2557;
                        ymin: int = 1049;
                        ymax: int = 1080;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 444;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 355;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 0;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366379144) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRShading";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 275;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196370734680) {
            next: ScrVert = (@2196370734728);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196370725416) {
            next: ScrEdge = (@2196370725368);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196370734728) {
                next: ScrVert = (@2196370734776);
                prev: ScrVert = (@2196370734680);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 5119;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196370734872) {
                next: ScrVert = (@2196370734920);
                prev: ScrVert = (@2196370734824);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 4231;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196477524872) {
            next: ScrArea = (@2196477524680);
            prev: ScrArea = null;
            v1: ScrVert = (@2196370734872);
            v2: ScrVert = ScrVert (@2196370734968) {
                next: ScrVert = (@2196370735016);
                prev: ScrVert = (@2196370734920);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 4231;
                    y: short = 800;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v3: ScrVert = ScrVert (@2196370735016) {
                next: ScrVert = (@2196370735064);
                prev: ScrVert = (@2196370734968);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 5119;
                    y: short = 800;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v4: ScrVert = (@2196370734728);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 4232;
                xmax: int = 5119;
                ymin: int = 25;
                ymax: int = 799;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 888;
            winy: short = 775;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480284680) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 3;
                    mainbo: short = 3;
                    mainbuser: short = 3;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477534344) {
                    next: ARegion = (@2196477533896);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 888;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 887;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 888;
                        winy: short = 32;
                        oldwinx: short = 888;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 4232;
                        xmax: int = 5119;
                        ymin: int = 768;
                        ymax: int = 799;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 888;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 710;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366383752) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRTexture Paint";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 276;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196370724648) {
            next: ScrVert = (@2196370724600);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 19;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196370723928) {
            next: ScrEdge = (@2196370724264);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196370724456) {
                next: ScrVert = (@2196370724408);
                prev: ScrVert = (@2196370724504);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 19;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v2: ScrVert = ScrVert (@2196370724600) {
                next: ScrVert = (@2196370724552);
                prev: ScrVert = (@2196370724648);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 19;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196477523336) {
            next: ScrArea = (@2196477523144);
            prev: ScrArea = null;
            v1: ScrVert = (@2196370724456);
            v2: ScrVert = ScrVert (@2196370724360) {
                next: ScrVert = (@2196370724312);
                prev: ScrVert = (@2196370724408);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1586;
                    y: short = 871;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v3: ScrVert = ScrVert (@2196370724312) {
                next: ScrVert = (@2196370721912);
                prev: ScrVert = (@2196370724360);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 1919;
                    y: short = 871;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v4: ScrVert = (@2196370724600);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 1587;
                xmax: int = 1919;
                ymin: int = 20;
                ymax: int = 870;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 333;
            winy: short = 851;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480284424) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 14;
                    mainbo: short = 14;
                    mainbuser: short = 14;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224767;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477456008) {
                    next: ARegion = (@2196477455560);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 236;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 333;
                            ymin: float = 0;
                            ymax: float = 26;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 332;
                            ymin: int = 0;
                            ymax: int = 25;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 333;
                        winy: short = 26;
                        oldwinx: short = 333;
                        oldwiny: short = 26;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 1587;
                        xmax: int = 1919;
                        ymin: int = 845;
                        ymax: int = 870;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 333;
                    winy: short = 26;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 0;
                    sizey: short = 0;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 0;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
bScreen (code:SN|@2196366382984) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SRUV Editing";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 277;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    vertbase: ListBase<ScrVert>[?] = [
        ScrVert (@2196370725944) {
            next: ScrVert = (@2196370727336);
            prev: ScrVert = null;
            newv: ScrVert = null;
            vec: vec2s {
                x: short = 0;
                y: short = 24;
            }
            flag: short = 0;
            editflag: short = 0;
        }
    ];
    edgebase: ListBase<ScrEdge>[?] = [
        ScrEdge (@2196370727432) {
            next: ScrEdge = (@2196370728344);
            prev: ScrEdge = null;
            v1: ScrVert = ScrVert (@2196370725704) {
                next: ScrVert = (@2196370728536);
                prev: ScrVert = (@2196370725656);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2129;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            v2: ScrVert = ScrVert (@2196370727336) {
                next: ScrVert = (@2196370725608);
                prev: ScrVert = (@2196370725944);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2559;
                    y: short = 24;
                }
                flag: short = 0;
                editflag: short = 0;
            }
            border: short = 0;
            flag: short = 0;
        }
    ];
    areabase: ListBase<ScrArea>[?] = [
        ScrArea (@2196477522568) {
            next: ScrArea = (@2196477522376);
            prev: ScrArea = null;
            v1: ScrVert = (@2196370725704);
            v2: ScrVert = ScrVert (@2196370728920) {
                next: ScrVert = (@2196370729352);
                prev: ScrVert = (@2196370728536);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2129;
                    y: short = 688;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v3: ScrVert = ScrVert (@2196370729352) {
                next: ScrVert = (@2196370728584);
                prev: ScrVert = (@2196370728920);
                newv: ScrVert = null;
                vec: vec2s {
                    x: short = 2559;
                    y: short = 688;
                }
                flag: short = 1;
                editflag: short = 1;
            }
            v4: ScrVert = (@2196370727336);
            full: bScreen = null;
            totrct: rcti {
                xmin: int = 2130;
                xmax: int = 2559;
                ymin: int = 25;
                ymax: int = 687;
            }
            spacetype: char = 4;
            butspacetype: char = 4;
            butspacetype_subtype: short = 0;
            winx: short = 430;
            winy: short = 663;
            headertype: char = 1;
            do_refresh: char = 0;
            flag: short = 0;
            region_active_win: short = -1;
            type: SpaceType = null;
            global: ScrGlobalAreaData = null;
            spacedata: ListBase<SpaceButs>[?] = [
                SpaceButs (@2196480284168) {
                    next: SpaceLink = null;
                    prev: SpaceLink = null;
                    regionbase: ListBase<unknown>[] = null;
                    spacetype: char = 4;
                    link_flag: char = 0;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 0;
                            ymin: float = 0;
                            ymax: float = 0;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        min: float[2] = [0.0, 0.0];
                        max: float[2] = [0.0, 0.0];
                        minzoom: float = 0;
                        maxzoom: float = 0;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 0;
                        keepzoom: short = 0;
                        keepofs: short = 0;
                        flag: short = 0;
                        align: short = 0;
                        winx: short = 0;
                        winy: short = 0;
                        oldwinx: short = 0;
                        oldwiny: short = 0;
                        around: short = 0;
                        alpha_vert: char = 0;
                        alpha_hor: char = 0;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    space_subtype: short = 0;
                    mainb: short = 4;
                    mainbo: short = 4;
                    mainbuser: short = 4;
                    preview: short = 1;
                    flag: char = 0;
                    outliner_sync: char = 0;
                    path: void = null;
                    pathflag: int = 224703;
                    dataicon: int = 160;
                    pinid: ID = null;
                    texuser: void = null;
                    runtime: SpaceProperties_Runtime = null;
                }
            ];
            regionbase: ListBase<ARegion>[?] = [
                ARegion (@2196477447944) {
                    next: ARegion = (@2196477447496);
                    prev: ARegion = null;
                    v2d: View2D {
                        tot: rctf {
                            xmin: float = 0;
                            xmax: float = 298;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        cur: rctf {
                            xmin: float = 0;
                            xmax: float = 430;
                            ymin: float = 0;
                            ymax: float = 32;
                        }
                        vert: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        hor: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        mask: rcti {
                            xmin: int = 0;
                            xmax: int = 429;
                            ymin: int = 0;
                            ymax: int = 31;
                        }
                        min: float[2] = [267.0, 25.0];
                        max: float[2] = [267.0, 25.0];
                        minzoom: float = 1;
                        maxzoom: float = 1;
                        scroll: short = 0;
                        scroll_ui: short = 0;
                        keeptot: short = 2;
                        keepzoom: short = 771;
                        keepofs: short = 4;
                        flag: short = 1036;
                        align: short = 10;
                        winx: short = 430;
                        winy: short = 32;
                        oldwinx: short = 430;
                        oldwiny: short = 32;
                        around: short = 0;
                        alpha_vert: char = -1;
                        alpha_hor: char = -1;
                        page_size_y: float = 0;
                        sms: SmoothView2DStore = null;
                        smooth_timer: wmTimer = null;
                    }
                    winrct: rcti {
                        xmin: int = 2130;
                        xmax: int = 2559;
                        ymin: int = 656;
                        ymax: int = 687;
                    }
                    drawrct: rcti {
                        xmin: int = 0;
                        xmax: int = 0;
                        ymin: int = 0;
                        ymax: int = 0;
                    }
                    winx: short = 430;
                    winy: short = 32;
                    category_scroll: int = 0;
                    visible: short = 0;
                    regiontype: short = 1;
                    alignment: short = 1;
                    flag: short = 0;
                    sizex: short = 344;
                    sizey: short = 26;
                    do_draw: short = 0;
                    do_draw_paintcursor: short = 0;
                    overlap: short = 0;
                    flagfullscreen: short = 0;
                    type: ARegionType = null;
                    uiblocks: ListBase<unknown>[] = null;
                    panels: ListBase<unknown>[] = null;
                    panels_category_active: ListBase<unknown>[] = null;
                    ui_lists: ListBase<unknown>[] = null;
                    ui_previews: ListBase<unknown>[] = null;
                    handlers: ListBase<unknown>[] = null;
                    panels_category: ListBase<unknown>[] = null;
                    gizmo_map: wmGizmoMap = null;
                    regiontimer: wmTimer = null;
                    draw_buffer: wmDrawBuffer = null;
                    headerstr: char = null;
                    regiondata: void = null;
                    runtime: ARegion_Runtime {
                        category: char = null;
                        visible_rect: rcti {
                            xmin: int = 0;
                            xmax: int = 0;
                            ymin: int = 0;
                            ymax: int = 0;
                        }
                        offset_x: int = 0;
                        offset_y: int = 0;
                        block_name_map: GHash = null;
                    }
                }
            ];
            handlers: ListBase<unknown>[] = null;
            actionzones: ListBase<unknown>[] = null;
            runtime: ScrArea_Runtime {
                tool: bToolRef = null;
                is_tool_set: char = 0;
            }
        }
    ];
    regionbase: ListBase<unknown>[] = null;
    scene: Scene = null;
    flag: short = 1;
    winid: short = 0;
    redraws_flag: short = 6;
    temp: char = 0;
    state: char = 0;
    do_draw: char = 0;
    do_refresh: char = 0;
    do_draw_gesture: char = 0;
    do_draw_paintcursor: char = 0;
    do_draw_drag: char = 0;
    skip_handling: char = 0;
    scrubbing: char = 0;
    active_region: ARegion = null;
    animtimer: wmTimer = null;
    context: void = null;
    tool_tip: wmTooltipState = null;
    preview: PreviewImage = null;
}
Scene (code:SC|@2196477755528) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "SCShip";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8704;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 278;
        properties: IDProperty = IDProperty (@2196477745640) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477745480) {
                        next: IDProperty = (@2196477745160);
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<IDProperty>[?] = [
                                IDProperty (@2196477745320) {
                                    next: IDProperty = null;
                                    prev: IDProperty = null;
                                    type: char = 1;
                                    subtype: char = 0;
                                    flag: short = 0;
                                    name: char[64] = "device";
                                    data: IDPropertyData {
                                        pointer: void = null;
                                        group: ListBase<unknown>[] = null;
                                        val: int = 1;
                                        val2: int = 0;
                                    }
                                    len: int = 0;
                                    totallen: int = 0;
                                    ui_data: IDPropertyUIData = null;
                                }
                            ];
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 1;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 2;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 1;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    camera: Object = null;
    world: World = (@2196464830216);
    set: Scene = null;
    base: ListBase<unknown>[] = null;
    basact: Base = null;
    cursor: View3DCursor {
        location: float[3] = [3.2, 5.2000003, 1.4];
        rotation_quaternion: float[4] = [1.0, 0.0, 0.0, 0.0];
        rotation_euler: float[3] = [1.5205309, 2.0253417e-7, 0.19687344];
        rotation_axis: float[3] = [0.0, 1.0, 0.0];
        rotation_angle: float = 0;
        rotation_mode: short = 1;
    }
    lay: int = 1;
    layact: int = 1;
    flag: short = 0;
    use_nodes: char = 0;
    nodetree: bNodeTree = null;
    ed: Editing = Editing (@2196477714568) {
        seqbasep: ListBase = null;
        displayed_channels: ListBase = null;
        seqbase: ListBase<unknown>[] = null;
        metastack: ListBase<unknown>[] = null;
        channels: ListBase<SeqTimelineChannel>[?] = [
            SeqTimelineChannel (@2196467285256) {
                next: SeqTimelineChannel = (@2196378842792);
                prev: SeqTimelineChannel = null;
                name: char[64] = "Channel 0";
                index: int = 0;
                flag: int = 0;
            }
        ];
        act_seq: Sequence = null;
        act_imagedir: char[1024] = "//../../../../Desktop/";
        act_sounddir: char[1024] = "";
        proxy_dir: char[1024] = "";
        proxy_storage: int = 0;
        over_ofs: int = 0;
        over_cfra: int = 0;
        over_flag: int = 0;
        over_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        cache: SeqCache = null;
        recycle_max_cost: float = 10;
        cache_flag: int = 9;
        prefetch_job: PrefetchJob = null;
        disk_cache_timestamp: int64_t = 0;
        runtime: EditingRuntime {
            sequence_lookup: SequenceLookup = null;
        }
    }
    toolsettings: ToolSettings = ToolSettings (@2196477791240) {
        vpaint: VPaint = VPaint (@2196467347528) {
            paint: Paint {
                brush: Brush = (@2196477274888);
                tool_slots: PaintToolSlot[3] = [
                    PaintToolSlot {
                        brush: Brush = (@2196477772040);
                    }
                ];
                tool_slots_len: int = 3;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477436040) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = [255, 255, 255, 128];
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1878;
                    ob_mode: short = 4;
                }
            }
            flag: char = 0;
            radial_symm: int[3] = [1, 1, 1];
        }
        wpaint: VPaint = VPaint (@2196467347192) {
            paint: Paint {
                brush: Brush = (@2196477274888);
                tool_slots: PaintToolSlot[3] = [
                    PaintToolSlot {
                        brush: Brush = (@2196477772040);
                    }
                ];
                tool_slots_len: int = 3;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477435592) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = [200, 200, 255, 128];
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1879;
                    ob_mode: short = 8;
                }
            }
            flag: char = 0;
            radial_symm: int[3] = [1, 1, 1];
        }
        sculpt: Sculpt = Sculpt (@2196477521800) {
            paint: Paint {
                brush: Brush = (@2196477053832);
                tool_slots: PaintToolSlot[33] = [
                    PaintToolSlot {
                        brush: Brush = null;
                    }
                ];
                tool_slots_len: int = 33;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477434248) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = [255, 100, 100, 128];
                flags: int = 3;
                num_input_samples: int = 1;
                symmetry_flags: int = 9;
                tile_offset: float[3] = [1.0, 1.0, 1.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1876;
                    ob_mode: short = 2;
                }
            }
            flags: int = 6144;
            transform_mode: int = 0;
            automasking_flags: int = 0;
            radial_symm: int[3] = [1, 1, 1];
            detail_size: float = 12;
            symmetrize_direction: int = 0;
            gravity_factor: float = 0;
            constant_detail: float = 3;
            detail_percent: float = 25;
            automasking_cavity_blur_steps: int = 0;
            automasking_cavity_factor: float = 0.5;
            automasking_start_normal_limit: float = 0.34906584;
            automasking_start_normal_falloff: float = 0.25;
            automasking_view_normal_limit: float = 1.5707964;
            automasking_view_normal_falloff: float = 0.25;
            automasking_cavity_curve: CurveMapping = CurveMapping (@2196477435144) {
                flag: int = 1;
                cur: int = 0;
                preset: int = 0;
                changed_timestamp: int = 1;
                curr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                clipr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                cm: CurveMap[4] = [
                    CurveMap {
                        totpoint: short = 1;
                        flag: short = 0;
                        range: float = 0;
                        mintable: float = 0;
                        maxtable: float = 0.000000000000000000000000000000000000000000001;
                        ext_in: float[2] = [0.0, 1.0];
                        ext_out: float[2] = [0.0, 1.0];
                        curve: CurveMapPoint = null;
                        table: CurveMapPoint = null;
                        premultable: CurveMapPoint = null;
                        premul_ext_in: float[2] = [0.0, 1.0];
                        premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                        default_handle_type: short = 1268;
                    }
                ];
                black: float[3] = [0.0, 0.0, 0.0];
                white: float[3] = [1.0, 1.0, 1.0];
                bwmul: float[3] = [1.0, 1.0, 1.0];
                sample: float[3] = [0.0, 0.0, 0.0];
                tone: short = 0;
            }
            automasking_cavity_curve_op: CurveMapping = CurveMapping (@2196477434696) {
                flag: int = 1;
                cur: int = 0;
                preset: int = 0;
                changed_timestamp: int = 1;
                curr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                clipr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                cm: CurveMap[4] = [
                    CurveMap {
                        totpoint: short = 1;
                        flag: short = 0;
                        range: float = 0;
                        mintable: float = 0;
                        maxtable: float = 0.000000000000000000000000000000000000000000001;
                        ext_in: float[2] = [0.0, 1.0];
                        ext_out: float[2] = [0.0, 1.0];
                        curve: CurveMapPoint = null;
                        table: CurveMapPoint = null;
                        premultable: CurveMapPoint = null;
                        premul_ext_in: float[2] = [0.0, 1.0];
                        premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                        default_handle_type: short = 1268;
                    }
                ];
                black: float[3] = [0.0, 0.0, 0.0];
                white: float[3] = [1.0, 1.0, 1.0];
                bwmul: float[3] = [1.0, 1.0, 1.0];
                sample: float[3] = [0.0, 0.0, 0.0];
                tone: short = 0;
            }
            gravity_object: Object = null;
        }
        uvsculpt: UvSculpt = null;
        gp_paint: GpPaint = GpPaint (@2196467349096) {
            paint: Paint {
                brush: Brush = (@2196477094664);
                tool_slots: PaintToolSlot[3] = [
                    PaintToolSlot {
                        brush: Brush = (@2196477094664);
                    }
                ];
                tool_slots_len: int = 3;
                palette: Palette = (@2196477424584);
                cavity_curve: CurveMapping = CurveMapping (@2196477433800) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = "";
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1882;
                    ob_mode: short = 256;
                }
            }
            flag: int = 0;
            mode: int = 0;
        }
        gp_vertexpaint: GpVertexPaint = GpVertexPaint (@2196467348872) {
            paint: Paint {
                brush: Brush = (@2196476958216);
                tool_slots: PaintToolSlot = PaintToolSlot (@2196373806152) {
                    brush: Brush = (@2196476958216);
                }
                tool_slots_len: int = 1;
                palette: Palette = (@2196477424584);
                cavity_curve: CurveMapping = CurveMapping (@2196477433352) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = "";
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1883;
                    ob_mode: short = 2048;
                }
            }
            flag: int = 0;
        }
        gp_sculptpaint: GpSculptPaint = GpSculptPaint (@2196467344168) {
            paint: Paint {
                brush: Brush = (@2196477023752);
                tool_slots: PaintToolSlot = PaintToolSlot (@2196373806168) {
                    brush: Brush = (@2196477023752);
                }
                tool_slots_len: int = 1;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477432904) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = "";
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1884;
                    ob_mode: short = 512;
                }
            }
            flag: int = 0;
        }
        gp_weightpaint: GpWeightPaint = GpWeightPaint (@2196467344392) {
            paint: Paint {
                brush: Brush = (@2196476944520);
                tool_slots: PaintToolSlot = PaintToolSlot (@2196373806232) {
                    brush: Brush = (@2196476944520);
                }
                tool_slots_len: int = 1;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477432456) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = "";
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1885;
                    ob_mode: short = 1024;
                }
            }
            flag: int = 0;
        }
        curves_sculpt: CurvesSculpt = null;
        vgroup_weight: float = 1;
        doublimit: float = 0.001;
        automerge: char = 0;
        object_flag: char = 1;
        selectmode: char = 1;
        unwrapper: char = 0;
        uvcalc_flag: char = 5;
        uv_flag: char = 1;
        uv_selectmode: char = 1;
        uv_sticky: char = 0;
        uvcalc_margin: float = 0;
        autoik_chainlen: short = 0;
        gpencil_flags: char = 0;
        gpencil_v3d_align: char = 1;
        gpencil_v2d_align: char = 33;
        annotate_v3d_align: char = 33;
        annotate_thickness: short = 3;
        gpencil_selectmode_edit: char = 0;
        gpencil_selectmode_sculpt: char = 0;
        gp_sculpt: GP_Sculpt_Settings {
            paintcursor: void = null;
            flag: int = 0;
            lock_axis: int = 0;
            isect_threshold: float = 0.1;
            cur_falloff: CurveMapping = CurveMapping (@2196477432008) {
                flag: int = 17;
                cur: int = 0;
                preset: int = 0;
                changed_timestamp: int = 0;
                curr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                clipr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                cm: CurveMap[4] = [
                    CurveMap {
                        totpoint: short = 17;
                        flag: short = 0;
                        range: float = 0;
                        mintable: float = 0;
                        maxtable: float = 0;
                        ext_in: float[2] = [0.0, 1.0];
                        ext_out: float[2] = [0.0, 1.0];
                        curve: CurveMapPoint = null;
                        table: CurveMapPoint = null;
                        premultable: CurveMapPoint = null;
                        premul_ext_in: float[2] = [0.0, 1.0];
                        premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                        default_handle_type: short = 1268;
                    }
                ];
                black: float[3] = [0.0, 0.0, 0.0];
                white: float[3] = [1.0, 1.0, 1.0];
                bwmul: float[3] = [1.0, 1.0, 1.0];
                sample: float[3] = [0.0, 0.0, 0.0];
                tone: short = 0;
            }
            cur_primitive: CurveMapping = CurveMapping (@2196477431560) {
                flag: int = 17;
                cur: int = 0;
                preset: int = 0;
                changed_timestamp: int = 0;
                curr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                clipr: rctf {
                    xmin: float = 0;
                    xmax: float = 1;
                    ymin: float = 0;
                    ymax: float = 1;
                }
                cm: CurveMap[4] = [
                    CurveMap {
                        totpoint: short = 17;
                        flag: short = 0;
                        range: float = 0;
                        mintable: float = 0;
                        maxtable: float = 0;
                        ext_in: float[2] = [0.0, 1.0];
                        ext_out: float[2] = [0.0, 1.0];
                        curve: CurveMapPoint = null;
                        table: CurveMapPoint = null;
                        premultable: CurveMapPoint = null;
                        premul_ext_in: float[2] = [0.0, 1.0];
                        premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                        default_handle_type: short = 1268;
                    }
                ];
                black: float[3] = [0.0, 0.0, 0.0];
                white: float[3] = [1.0, 1.0, 1.0];
                bwmul: float[3] = [1.0, 1.0, 1.0];
                sample: float[3] = [0.0, 0.0, 0.0];
                tone: short = 0;
            }
            guide: GP_Sculpt_Guide {
                use_guide: char = 0;
                use_snapping: char = 0;
                reference_point: char = 0;
                type: char = 0;
                angle: float = 0;
                angle_snap: float = 0;
                spacing: float = 0;
                location: float[3] = [0.0, 0.0, 0.0];
                reference_object: Object = null;
            }
        }
        gp_interpolate: GP_Interpolate_Settings {
            custom_ipo: CurveMapping = null;
        }
        imapaint: ImagePaintSettings {
            paint: Paint {
                brush: Brush = (@2196476993672);
                tool_slots: PaintToolSlot[6] = [
                    PaintToolSlot {
                        brush: Brush = (@2196476993672);
                    }
                ];
                tool_slots_len: int = 6;
                palette: Palette = null;
                cavity_curve: CurveMapping = CurveMapping (@2196477431112) {
                    flag: int = 1;
                    cur: int = 0;
                    preset: int = 0;
                    changed_timestamp: int = 1;
                    curr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    clipr: rctf {
                        xmin: float = 0;
                        xmax: float = 1;
                        ymin: float = 0;
                        ymax: float = 1;
                    }
                    cm: CurveMap[4] = [
                        CurveMap {
                            totpoint: short = 1;
                            flag: short = 0;
                            range: float = 0;
                            mintable: float = 0;
                            maxtable: float = 0.000000000000000000000000000000000000000000001;
                            ext_in: float[2] = [0.0, 1.0];
                            ext_out: float[2] = [0.0, 1.0];
                            curve: CurveMapPoint = null;
                            table: CurveMapPoint = null;
                            premultable: CurveMapPoint = null;
                            premul_ext_in: float[2] = [0.0, 1.0];
                            premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                            default_handle_type: short = 1268;
                        }
                    ];
                    black: float[3] = [0.0, 0.0, 0.0];
                    white: float[3] = [1.0, 1.0, 1.0];
                    bwmul: float[3] = [1.0, 1.0, 1.0];
                    sample: float[3] = [0.0, 0.0, 0.0];
                    tone: short = 0;
                }
                paint_cursor: void = null;
                paint_cursor_col: char[4] = [255, 255, 255, 128];
                flags: int = 1;
                num_input_samples: int = 1;
                symmetry_flags: int = 0;
                tile_offset: float[3] = [0.0, 0.0, 0.0];
                runtime: Paint_Runtime {
                    tool_offset: int = 1880;
                    ob_mode: short = 16;
                }
            }
            flag: short = 0;
            missing_data: short = 4;
            seam_bleed: short = 2;
            normal_angle: short = 80;
            screen_grab_size: short[2] = [512, 512];
            mode: int = 0;
            stencil: Image = null;
            clone: Image = null;
            canvas: Image = null;
            stencil_col: float[3] = [0.0, 0.0, 0.0];
            dither: float = 0;
            interp: int = 0;
        }
        paint_mode: PaintModeSettings {
            canvas_source: char = 0;
            canvas_image: Image = null;
            image_user: ImageUser {
                scene: Scene = null;
                framenr: int = 0;
                frames: int = 0;
                offset: int = 0;
                sfra: int = 0;
                cycl: char = 0;
                multiview_eye: char = 0;
                pass: short = 0;
                tile: int = 0;
                multi_index: short = 0;
                view: short = 0;
                layer: short = 0;
                flag: short = 0;
            }
        }
        particle: ParticleEditSettings {
            flag: short = 7;
            totrekey: short = 5;
            totaddkey: short = 5;
            brushtype: short = 0;
            brush: ParticleBrushData[7] = [
                ParticleBrushData {
                    size: short = 7;
                    step: short = 5;
                    invert: short = 5;
                    count: short = 0;
                    flag: int = 655410;
                    strength: float = 0.000000000000000000000000000000000000000918355;
                }
            ];
            paintcursor: void = null;
            emitterdist: float = 0.25;
            selectmode: int = 1;
            edittype: int = 0;
            draw_step: int = 2;
            fade_frames: int = 0;
            scene: Scene = (@2196477755528);
            object: Object = (@2196477391368);
            shape_object: Object = null;
        }
        proportional_size: float = 1;
        select_thresh: float = 0.01;
        autokey_flag: short = 0;
        autokey_mode: char = 2;
        keyframe_type: char = 0;
        multires_subdiv_type: char = 0;
        edge_mode: char = 0;
        edge_mode_live_unwrap: char = 0;
        transform_pivot_point: char = 3;
        transform_flag: char = 0;
        snap_node_mode: char = -128;
        snap_mode: short = 256;
        snap_uv_mode: short = 256;
        snap_anim_mode: short = 1;
        snap_flag: short = 768;
        snap_flag_node: short = 0;
        snap_flag_seq: short = 0;
        snap_flag_anim: short = 1;
        snap_uv_flag: short = 0;
        snap_target: char = 0;
        snap_transform_mode_flag: char = 1;
        snap_face_nearest_steps: short = 1;
        proportional_edit: char = 0;
        prop_mode: char = 0;
        proportional_objects: char = 0;
        proportional_mask: char = 0;
        proportional_action: char = 0;
        proportional_fcurve: char = 0;
        lock_markers: char = 0;
        auto_normalize: char = 0;
        wpaint_lock_relative: char = 0;
        multipaint: char = 0;
        weightuser: char = 0;
        vgroupsubset: char = 0;
        gpencil_selectmode_vertex: char = 0;
        uv_sculpt_settings: char = 0;
        uv_relax_method: char = 1;
        workspace_tool_type: char = 0;
        sculpt_paint_settings: short = 17;
        sculpt_paint_unified_size: int = 35;
        sculpt_paint_unified_unprojected_radius: float = 0.9756744;
        sculpt_paint_unified_alpha: float = 0.5;
        unified_paint_settings: UnifiedPaintSettings {
            size: int = 50;
            unprojected_radius: float = 0.29020748;
            alpha: float = 0.5;
            weight: float = 1;
            rgb: float[3] = [0.0, 0.0, 0.0];
            secondary_rgb: float[3] = [0.0, 0.0, 0.0];
            flag: int = 33;
            last_rake: float[2] = [876.0, 563.0];
            last_rake_angle: float = 0;
            last_stroke_valid: int = 1;
            average_stroke_accum: float[3] = [0.0, 2.0, 1.5];
            average_stroke_counter: int = 1;
            brush_rotation: float = 0;
            brush_rotation_sec: float = 0;
            anchored_size: int = 0;
            overlap_factor: float = 0.19999999;
            draw_inverted: char = 0;
            stroke_active: char = 0;
            draw_anchored: char = 0;
            do_linear_conversion: char = 0;
            last_location: float[3] = [0.0, 0.0, 0.0];
            last_hit: int = 0;
            anchored_initial_mouse: float[2] = [0.0, 0.0];
            pixel_radius: float = 50;
            initial_pixel_radius: float = 0;
            start_pixel_radius: float = 0;
            size_pressure_value: float = 1;
            tex_mouse: float[2] = [876.0, 563.0];
            mask_tex_mouse: float[2] = [876.0, 563.0];
            colorspace: ColorSpace = null;
        }
        curve_paint_settings: CurvePaintSettings {
            curve_type: char = 1;
            flag: char = 1;
            depth_mode: char = 0;
            surface_plane: char = 0;
            fit_method: char = 0;
            error_threshold: short = 8;
            radius_min: float = 0;
            radius_max: float = 1;
            radius_taper_start: float = 0;
            radius_taper_end: float = 0;
            surface_offset: float = 0;
            corner_angle: float = 1.2217305;
        }
        statvis: MeshStatVis {
            type: char = 0;
            overhang_axis: char = 5;
            overhang_min: float = 0;
            overhang_max: float = 0.7853982;
            thickness_min: float = 0;
            thickness_max: float = 0.1;
            thickness_samples: char = 1;
            distort_min: float = 0.08726646;
            distort_max: float = 0.7853982;
            sharp_min: float = 1.5707964;
            sharp_max: float = 3.1415927;
        }
        normal_vector: float[3] = [0.0, 0.0, 0.0];
        custom_bevel_profile_preset: CurveProfile = CurveProfile (@2196367215336) {
            path_len: short = 2;
            segments_len: short = 0;
            preset: int = 0;
            path: CurveProfilePoint[2] = [
                CurveProfilePoint {
                    x: float = 1;
                    y: float = 0;
                    flag: short = 0;
                    h1: char = 1;
                    h2: char = 1;
                    h1_loc: float[2] = [1.3904115, -0.39041153];
                    h2_loc: float[2] = [0.6095885, 0.39041153];
                    profile: CurveProfile = (@2196367215336);
                }
            ];
            table: CurveProfilePoint = null;
            segments: CurveProfilePoint = null;
            flag: int = 1;
            changed_timestamp: int = 13;
            view_rect: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clip_rect: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
        }
        sequencer_tool_settings: SequencerToolSettings = SequencerToolSettings (@2196467719304) {
            fit_method: int = 0;
            snap_mode: short = 7;
            snap_flag: short = 0;
            overlap_mode: int = 2;
            snap_distance: int = 15;
            pivot_point: int = 3;
        }
        snap_mode_tools: short = 63;
        plane_axis: char = 2;
        plane_depth: char = 0;
        plane_orient: char = 0;
        use_plane_axis_auto: char = 0;
    }
    safe_areas: DisplaySafeAreas {
        title: float[2] = [0.1, 0.05];
        action: float[2] = [0.035, 0.035];
        title_center: float[2] = [0.175, 0.05];
        action_center: float[2] = [0.15, 0.05];
    }
    r: RenderData {
        im_format: ImageFormatData {
            imtype: char = 17;
            depth: char = 2;
            planes: char = 32;
            flag: char = 0;
            quality: char = 90;
            compress: char = 15;
            exr_codec: char = 2;
            cineon_flag: char = 0;
            cineon_white: short = 0;
            cineon_black: short = 0;
            cineon_gamma: float = 0;
            jp2_flag: char = 0;
            jp2_codec: char = 0;
            tiff_codec: char = 0;
            views_format: char = 0;
            stereo3d_format: Stereo3dFormat {
                flag: short = 0;
                display_mode: char = 0;
                anaglyph_type: char = 0;
                interlace_type: char = 0;
            }
            color_management: char = 0;
            view_settings: ColorManagedViewSettings {
                flag: int = 0;
                look: char[64] = "None";
                view_transform: char[64] = "Standard";
                exposure: float = 0;
                gamma: float = 1;
                curve_mapping: CurveMapping = null;
            }
            display_settings: ColorManagedDisplaySettings {
                display_device: char[64] = "sRGB";
            }
            linear_colorspace_settings: ColorManagedColorspaceSettings {
                name: char[64] = "";
            }
        }
        avicodecdata: AviCodecData = null;
        ffcodecdata: FFMpegCodecData {
            type: int = 0;
            codec: int = 0;
            audio_codec: int = 0;
            video_bitrate: int = 0;
            audio_bitrate: int = 192;
            audio_mixrate: int = 48000;
            audio_channels: int = 2;
            audio_volume: float = 1;
            gop_size: int = 0;
            max_b_frames: int = 0;
            flags: int = 0;
            constant_rate_factor: int = -1;
            ffmpeg_preset: int = 10;
            rc_min_rate: int = 0;
            rc_max_rate: int = 0;
            rc_buffer_size: int = 0;
            mux_packet_size: int = 0;
            mux_rate: int = 0;
        }
        cfra: int = 0;
        sfra: int = 0;
        efra: int = 20;
        subframe: float = 0;
        psfra: int = 0;
        pefra: int = 0;
        images: int = 100;
        framapto: int = 100;
        flag: short = 0;
        threads: short = 1;
        framelen: float = 1;
        blurfac: float = 0.5;
        frame_step: int = 1;
        dimensionspreset: short = 0;
        size: short = 100;
        xsch: int = 1920;
        ysch: int = 1080;
        tilex: int = 64;
        tiley: int = 64;
        planes: short = 24;
        imtype: short = 17;
        subimtype: short = 0;
        quality: short = 90;
        use_lock_interface: char = 0;
        scemode: int = 81;
        mode: int = 1;
        frs_sec: short = 24;
        alphamode: char = 0;
        border: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        layers: ListBase<unknown>[] = null;
        actlay: short = 0;
        xasp: float = 1;
        yasp: float = 1;
        frs_sec_base: float = 1;
        gauss: float = 1.5;
        color_mgt_flag: int = 1;
        dither_intensity: float = 1;
        bake_mode: short = 0;
        bake_flag: short = 1;
        bake_filter: short = 16;
        bake_samples: short = 256;
        bake_margin_type: short = 0;
        bake_biasdist: float = 0.001;
        bake_user_scale: float = 0;
        pic: char[1024] = "/tmp\";
        stamp: int = 1311;
        stamp_font_id: short = 12;
        stamp_udata: char[768] = "";
        fg_stamp: float[4] = [0.8, 0.8, 0.8, 1.0];
        bg_stamp: float[4] = [0.0, 0.0, 0.0, 0.25];
        seq_prev_type: char = 3;
        seq_rend_type: char = 0;
        seq_flag: char = 0;
        simplify_subsurf: short = 6;
        simplify_subsurf_render: short = 6;
        simplify_gpencil: short = 0;
        simplify_particles: float = 1;
        simplify_particles_render: float = 1;
        simplify_volumes: float = 1;
        simplify_shadows: float = 1;
        simplify_shadows_render: float = 1;
        line_thickness_mode: int = 1;
        unit_line_thickness: float = 1;
        engine: char[32] = "BLENDER_EEVEE";
        perf_flag: short = 0;
        bake: BakeData {
            im_format: ImageFormatData {
                imtype: char = 17;
                depth: char = 2;
                planes: char = 32;
                flag: char = 0;
                quality: char = 90;
                compress: char = 15;
                exr_codec: char = 0;
                cineon_flag: char = 0;
                cineon_white: short = 0;
                cineon_black: short = 0;
                cineon_gamma: float = 0;
                jp2_flag: char = 0;
                jp2_codec: char = 0;
                tiff_codec: char = 0;
                views_format: char = 0;
                stereo3d_format: Stereo3dFormat {
                    flag: short = 0;
                    display_mode: char = 0;
                    anaglyph_type: char = 0;
                    interlace_type: char = 0;
                }
                color_management: char = 0;
                view_settings: ColorManagedViewSettings {
                    flag: int = 0;
                    look: char[64] = "None";
                    view_transform: char[64] = "Standard";
                    exposure: float = 0;
                    gamma: float = 1;
                    curve_mapping: CurveMapping = null;
                }
                display_settings: ColorManagedDisplaySettings {
                    display_device: char[64] = "sRGB";
                }
                linear_colorspace_settings: ColorManagedColorspaceSettings {
                    name: char[64] = "";
                }
            }
            filepath: char[1024] = "//";
            width: short = 512;
            height: short = 512;
            margin: short = 16;
            flag: short = 1;
            cage_extrusion: float = 0;
            max_ray_distance: float = 0;
            pass_filter: int = -1;
            normal_swizzle: char[3] = "";
            normal_space: char = 3;
            target: char = 0;
            save_mode: char = 0;
            margin_type: char = 0;
            view_from: char = 0;
            cage_object: Object = null;
        }
        preview_pixel_size: short = 0;
        views: ListBase<SceneRenderView>[?] = [
            SceneRenderView (@2196477744520) {
                next: SceneRenderView = (@2196477744360);
                prev: SceneRenderView = null;
                name: char[64] = "left";
                suffix: char[64] = "_L";
                viewflag: int = 0;
            }
        ];
        actview: short = 0;
        views_format: short = 0;
        hair_type: short = 0;
        hair_subdiv: short = 0;
        mblur_shutter_curve: CurveMapping {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                    default_handle_type: short = 1268;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
    }
    audio: AudioData {
        mixrate: int = 44100;
        main: float = 1;
        speed_of_sound: float = 343.3;
        doppler_factor: float = 1;
        distance_model: int = 2;
        flag: short = 0;
        volume: float = 1;
    }
    markers: ListBase<unknown>[] = null;
    transform_spaces: ListBase<unknown>[] = null;
    orientation_slots: TransformOrientationSlot[4] = [
        TransformOrientationSlot {
            type: int = 0;
            index_custom: int = 0;
            flag: char = 0;
        }
    ];
    sound_scene: void = null;
    playback_handle: void = null;
    sound_scrub_handle: void = null;
    speaker_handles: void = null;
    fps_info: void = null;
    depsgraph_hash: GHash = null;
    active_keyingset: int = 0;
    keyingsets: ListBase<unknown>[] = null;
    unit: UnitSettings {
        scale_length: float = 1;
        system: char = 1;
        system_rotation: char = 0;
        flag: short = 0;
        length_unit: char = 3;
        mass_unit: char = 2;
        time_unit: char = 3;
        temperature_unit: char = 0;
    }
    gpd: bGPdata = null;
    clip: MovieClip = null;
    physics_settings: PhysicsSettings {
        gravity: float[3] = [0.0, 0.0, -9.81];
        flag: int = 1;
        quick_cache_step: int = 0;
    }
    customdata_mask: CustomData_MeshMasks {
        vmask: uint64_t = 281474976710656;
        emask: uint64_t = 70368744177664;
        fmask: uint64_t = 0;
        pmask: uint64_t = 0;
        lmask: uint64_t = 2048;
    }
    customdata_mask_modal: CustomData_MeshMasks {
        vmask: uint64_t = 0;
        emask: uint64_t = 0;
        fmask: uint64_t = 0;
        pmask: uint64_t = 0;
        lmask: uint64_t = 0;
    }
    view_settings: ColorManagedViewSettings {
        flag: int = 0;
        look: char[64] = "None";
        view_transform: char[64] = "AgX";
        exposure: float = 0;
        gamma: float = 1;
        curve_mapping: CurveMapping = CurveMapping (@2196477430664) {
            flag: int = 17;
            cur: int = 3;
            preset: int = 0;
            changed_timestamp: int = 3;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0.000000000000000000000000000000000000000000004;
                    mintable: float = 0;
                    maxtable: float = 0.000000000000000000000000000000000000000000004;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
    }
    display_settings: ColorManagedDisplaySettings {
        display_device: char[64] = "sRGB";
    }
    sequencer_colorspace_settings: ColorManagedColorspaceSettings {
        name: char[64] = "sRGB";
    }
    rigidbody_world: RigidBodyWorld = null;
    preview: PreviewImage = null;
    view_layers: ListBase<ViewLayer>[?] = [
        ViewLayer (@2196366384520) {
            next: ViewLayer = null;
            prev: ViewLayer = null;
            name: char[64] = "ViewLayer";
            flag: short = 5;
            object_bases: ListBase<Base>[?] = [
                Base (@2196477936904) {
                    next: Base = (@2196477936840);
                    prev: Base = null;
                    object: Object = (@2196476881672);
                    base_orig: Base = null;
                    lay: int = 0;
                    flag: short = 214;
                    flag_from_collection: short = 214;
                    flag_legacy: short = 0;
                    local_view_bits: short = 0;
                    local_collections_bits: short = -1;
                }
            ];
            stats: SceneStats = null;
            basact: Base = Base (@2196477378504) {
                next: Base = (@2196477378440);
                prev: Base = (@2196477935752);
                object: Object = (@2196477391368);
                base_orig: Base = null;
                lay: int = 0;
                flag: short = 215;
                flag_from_collection: short = 214;
                flag_legacy: short = 0;
                local_view_bits: short = -1;
                local_collections_bits: short = -1;
            }
            layer_collections: ListBase<LayerCollection>[?] = [
                LayerCollection (@2196367222776) {
                    next: LayerCollection = null;
                    prev: LayerCollection = null;
                    collection: Collection = Collection (@2196366379528) {
                        id: ID {
                            next: void = null;
                            prev: void = null;
                            newid: ID = null;
                            lib: Library = null;
                            asset_data: AssetMetaData = null;
                            name: char[66] = "GRScene Collection";
                            flag: short = 1024;
                            tag: int = 0;
                            us: int = 0;
                            icon_id: int = 0;
                            recalc: int = 0;
                            recalc_up_to_undo_push: int = 8192;
                            recalc_after_undo_push: int = 0;
                            session_uuid: int = 279;
                            properties: IDProperty = null;
                            override_library: IDOverrideLibrary = null;
                            orig_id: ID = null;
                            py_instance: void = null;
                            library_weak_reference: LibraryWeakReference = null;
                            runtime: ID_Runtime {
                                remap: ID_Runtime_Remap {
                                    status: int = 1;
                                    skipped_refcounted: int = 0;
                                    skipped_direct: int = 0;
                                    skipped_indirect: int = 0;
                                }
                            }
                        }
                        gobject: ListBase<unknown>[] = null;
                        children: ListBase<CollectionChild>[?] = [
                            CollectionChild (@2196477476632) {
                                next: CollectionChild = (@2196477476584);
                                prev: CollectionChild = null;
                                collection: Collection = (@2196366377608);
                                light_linking: CollectionLightLinking {
                                    link_state: uchar = 0;
                                }
                            }
                        ];
                        preview: PreviewImage = null;
                        layer: int = 0;
                        dupli_ofs: float[3] = [0.0, 0.0, 0.0];
                        flag: uchar = 32;
                        color_tag: int8_t = -1;
                        lineart_usage: uchar = 0;
                        lineart_flags: uchar = 0;
                        lineart_intersection_mask: uchar = 0;
                        lineart_intersection_priority: uchar = 0;
                        view_layer: ViewLayer = null;
                        runtime: Collection_Runtime {
                            owner_id: ID = (@2196477755528);
                            object_cache: ListBase<unknown>[] = null;
                            object_cache_instanced: ListBase<unknown>[] = null;
                            parents: ListBase<unknown>[] = null;
                            gobject_hash: GHash = null;
                            tag: uchar = 0;
                        }
                    }
                    flag: short = 0;
                    runtime_flag: short = 17;
                    layer_collections: ListBase<LayerCollection>[?] = [
                        LayerCollection (@2196367222696) {
                            next: LayerCollection = (@2196367222616);
                            prev: LayerCollection = null;
                            collection: Collection = (@2196366377608);
                            flag: short = 0;
                            runtime_flag: short = 16;
                            layer_collections: ListBase<unknown>[] = null;
                            local_collections_bits: short = -1;
                        }
                    ];
                    local_collections_bits: short = -1;
                }
            ];
            active_collection: LayerCollection = LayerCollection (@2196367222296) {
                next: LayerCollection = (@2196367222216);
                prev: LayerCollection = (@2196367222616);
                collection: Collection = (@2196366390280);
                flag: short = 0;
                runtime_flag: short = 16;
                layer_collections: ListBase<unknown>[] = null;
                local_collections_bits: short = -1;
            }
            layflag: int = 32767;
            passflag: int = 1;
            pass_alpha_threshold: float = 0.5;
            cryptomatte_flag: short = 8;
            cryptomatte_levels: short = 6;
            samples: int = 0;
            mat_override: Material = null;
            id_properties: IDProperty = IDProperty (@2196477744200) {
                next: IDProperty = null;
                prev: IDProperty = null;
                type: char = 6;
                subtype: char = 0;
                flag: short = 0;
                name: char[64] = "ViewLayer ID properties";
                data: IDPropertyData {
                    pointer: void = null;
                    group: ListBase<IDProperty>[?] = [
                        IDProperty (@2196477744040) {
                            next: IDProperty = null;
                            prev: IDProperty = null;
                            type: char = 6;
                            subtype: char = 0;
                            flag: short = 0;
                            name: char[64] = "cycles";
                            data: IDPropertyData {
                                pointer: void = null;
                                group: ListBase<IDProperty>[?] = [
                                    IDProperty (@2196477743880) {
                                        next: IDProperty = null;
                                        prev: IDProperty = null;
                                        type: char = 1;
                                        subtype: char = 0;
                                        flag: short = 0;
                                        name: char[64] = "use_denoising";
                                        data: IDPropertyData {
                                            pointer: void = null;
                                            group: ListBase<unknown>[] = null;
                                            val: int = 1;
                                            val2: int = 0;
                                        }
                                        len: int = 0;
                                        totallen: int = 0;
                                        ui_data: IDPropertyUIData = null;
                                    }
                                ];
                                val: int = 0;
                                val2: int = 0;
                            }
                            len: int = 1;
                            totallen: int = 0;
                            ui_data: IDPropertyUIData = null;
                        }
                    ];
                    val: int = 0;
                    val2: int = 0;
                }
                len: int = 1;
                totallen: int = 0;
                ui_data: IDPropertyUIData = null;
            }
            freestyle_config: FreestyleConfig {
                modules: ListBase<unknown>[] = null;
                mode: int = 2;
                raycasting_algorithm: int = 0;
                flags: int = 0;
                sphere_radius: float = 0.1;
                dkr_epsilon: float = 0;
                crease_angle: float = 2.3462472;
                linesets: ListBase<FreestyleLineSet>[?] = [
                    FreestyleLineSet (@2196477743720) {
                        next: FreestyleLineSet = null;
                        prev: FreestyleLineSet = null;
                        name: char[64] = "LineSet";
                        flags: int = 3;
                        selection: int = 11;
                        qi: short = 1;
                        qi_start: int = 0;
                        qi_end: int = 100;
                        edge_types: int = 7;
                        exclude_edge_types: int = 0;
                        group: Collection = null;
                        linestyle: FreestyleLineStyle = (@2196476091016);
                    }
                ];
            }
            eevee: ViewLayerEEVEE {
                render_passes: int = 0;
            }
            aovs: ListBase<unknown>[] = null;
            active_aov: ViewLayerAOV = null;
            lightgroups: ListBase<unknown>[] = null;
            active_lightgroup: ViewLayerLightgroup = null;
            drawdata: ListBase<unknown>[] = null;
            object_bases_array: Base[] = null;
            object_bases_hash: GHash = null;
        }
    ];
    master_collection: Collection = (@2196366379528);
    layer_properties: IDProperty = null;
    simulation_frame_start: int = 1;
    simulation_frame_end: int = 250;
    display: SceneDisplay {
        light_direction: float[3] = [0.57735026, 0.57735026, 0.57735026];
        shadow_shift: float = 0.1;
        shadow_focus: float = 0;
        matcap_ssao_distance: float = 0.2;
        matcap_ssao_attenuation: float = 1;
        matcap_ssao_samples: int = 16;
        viewport_aa: char = 1;
        render_aa: char = 8;
        shading: View3DShading {
            type: char = 3;
            prev_type: char = 3;
            prev_type_wire: char = 0;
            color_type: char = 0;
            flag: short = 16;
            light: char = 1;
            background_type: char = 0;
            cavity_type: char = 0;
            wire_color_type: char = 0;
            use_compositor: char = 0;
            studio_light: char[256] = "Default";
            lookdev_light: char[256] = "";
            matcap: char[256] = "";
            shadow_intensity: float = 0.5;
            single_color: float[3] = [0.8, 0.8, 0.8];
            studiolight_rot_z: float = 0;
            studiolight_background: float = 0;
            studiolight_intensity: float = 0;
            studiolight_blur: float = 0;
            object_outline_color: float[3] = [0.0, 0.0, 0.0];
            xray_alpha: float = 0.5;
            xray_alpha_wire: float = 0;
            cavity_valley_factor: float = 1;
            cavity_ridge_factor: float = 1;
            background_color: float[3] = [0.0, 0.0, 0.0];
            curvature_ridge_factor: float = 0;
            curvature_valley_factor: float = 0;
            render_pass: int = 1;
            aov_name: char[64] = "";
            prop: IDProperty = null;
        }
    }
    eevee: SceneEEVEE {
        flag: int = 17942626;
        gi_diffuse_bounces: int = 3;
        gi_cubemap_resolution: int = 512;
        gi_visibility_resolution: int = 32;
        gi_irradiance_smoothing: float = 0.1;
        gi_glossy_clamp: float = 0;
        gi_filter_quality: float = 3;
        gi_irradiance_pool_size: int = 16;
        gi_cubemap_draw_size: float = 0.3;
        gi_irradiance_draw_size: float = 0.1;
        taa_samples: int = 16;
        taa_render_samples: int = 64;
        sss_samples: int = 7;
        sss_jitter_threshold: float = 0.3;
        ssr_quality: float = 0.25;
        ssr_max_roughness: float = 0.5;
        ssr_thickness: float = 0.2;
        ssr_border_fade: float = 0.075;
        ssr_firefly_fac: float = 10;
        volumetric_start: float = 0.1;
        volumetric_end: float = 100;
        volumetric_tile_size: int = 8;
        volumetric_samples: int = 64;
        volumetric_sample_distribution: float = 0.8;
        volumetric_light_clamp: float = 0;
        volumetric_shadow_samples: int = 16;
        gtao_distance: float = 0.2;
        gtao_factor: float = 1;
        gtao_quality: float = 0.25;
        bokeh_overblur: float = 5;
        bokeh_max_size: float = 100;
        bokeh_threshold: float = 1;
        bokeh_neighbor_max: float = 10;
        bokeh_denoise_fac: float = 0.75;
        bloom_color: float[3] = [1.0, 1.0, 1.0];
        bloom_threshold: float = 0.8;
        bloom_knee: float = 0.5;
        bloom_intensity: float = 0.05;
        bloom_radius: float = 6.5;
        bloom_clamp: float = 0;
        motion_blur_samples: int = 8;
        motion_blur_max: int = 32;
        motion_blur_steps: int = 1;
        motion_blur_position: int = 0;
        motion_blur_shutter: float = 0.5;
        motion_blur_depth_scale: float = 100;
        shadow_method: int = 1;
        shadow_cube_size: int = 512;
        shadow_cascade_size: int = 1024;
        shadow_pool_size: int = 512;
        shadow_ray_count: int = 1;
        shadow_step_count: int = 6;
        shadow_normal_bias: float = 0.02;
        ray_split_settings: int = 0;
        ray_tracing_method: int = 1;
        reflection_options: RaytraceEEVEE {
            screen_trace_quality: float = 0.25;
            screen_trace_thickness: float = 0.2;
            resolution_scale: int = 2;
            sample_clamp: float = 10;
            flag: int = 1;
            denoise_stages: int = 7;
        }
        refraction_options: RaytraceEEVEE {
            screen_trace_quality: float = 0.25;
            screen_trace_thickness: float = 0.2;
            resolution_scale: int = 2;
            sample_clamp: float = 10;
            flag: int = 1;
            denoise_stages: int = 7;
        }
        diffuse_options: RaytraceEEVEE {
            screen_trace_quality: float = 0.25;
            screen_trace_thickness: float = 0.2;
            resolution_scale: int = 2;
            sample_clamp: float = 10;
            flag: int = 1;
            denoise_stages: int = 7;
        }
        light_cache: LightCache = null;
        light_cache_data: LightCache = null;
        light_cache_info: char[128] = "No light cache in this scene";
        overscan: float = 3;
        light_threshold: float = 0.01;
    }
    grease_pencil_settings: SceneGpencil {
        smaa_threshold: float = 1;
    }
    hydra: SceneHydra {
        export_method: int = 0;
    }
}
Brush (code:BR|@2196477772040) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRAdd";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 280;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477430216) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 1;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477429768) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477326728) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRAirbrush";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 281;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477429320) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 300;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477701768) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.4;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 11;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 8199;
        gradient_f: float = 0.9;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 1;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477427976) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477345352) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477344904) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477344456) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477344008) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477343560) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477343112) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477342664) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477342216) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = (@2196464844424);
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477428872) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477324040) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRAverage";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 282;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477341768) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 12;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 2;
    weightpaint_tool: char = 2;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477341320) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477321352) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRBlob";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 283;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477340872) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 17;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477340424) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477318664) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRBlur";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 284;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477339976) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 1;
    weightpaint_tool: char = 1;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477339528) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477315976) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRBoundary";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 285;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477339080) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 0;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 30;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 8;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477338632) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477313288) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRClay";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 286;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477338184) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263180;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 3;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0.65;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 8;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0.25;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.75;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477337736) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477293960) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRClay Strips";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 287;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477337288) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 10;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000014;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 9228;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 5;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.6;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0.18;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 18;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 1.55;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 9;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.80651283;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477336840) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477291272) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRClay Thumb";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 288;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477336392) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 1036;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 6;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0.5;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 25;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 1;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477335944) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477288584) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRClone";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 289;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477335496) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 16;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 3;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477335048) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477285896) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRClone Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 290;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477334600) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 8;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477701448) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 27;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 6;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 208;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477333256) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477332808) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477333704) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477332360) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477331912) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477331464) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477331016) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477330568) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477330120) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477334152) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477283208) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRCloth";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 291;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477329672) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263168;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 26;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.5, 0.1, 0.9];
    sub_col: float[4] = [1.0, 0.5, 0.1, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477263432) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477280520) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRCrease";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 292;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477262984) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 11;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000015;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263684;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.25;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 16;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477262536) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477277576) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRDarken";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 293;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477262088) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 5;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477261640) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477274888) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRDraw";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 294;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477261192) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 3;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000004;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.0019483322];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 134218752;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477260744) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477272200) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRDraw Face Sets";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 295;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477260296) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 0;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 27;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477259848) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477269512) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRDraw Sharp";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 296;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477259400) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263684;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 5;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 20;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 6;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477258952) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477266824) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRElastic Deform";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 297;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477258504) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 0;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 21;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 2;
    elastic_deform_volume_preservation: float = 0.4;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477258056) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477264136) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BREraser Hard";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 298;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477257608) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 30;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 2;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477701128) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 9;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 100;
        era_thickness_f: float = 50;
        flag: int = 1056;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 11;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477256264) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477255816) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477256712) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477255368) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477254920) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477254472) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477254024) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477253576) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477253128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477257160) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477228424) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BREraser Point";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 299;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477252680) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 30;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 2;
    gpencil_vertex_tool: char = 2;
    gpencil_sculpt_tool: char = 2;
    gpencil_weight_tool: char = 2;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477700808) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 9;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 2;
        eraser_mode: int = 1;
        active_smooth: float = 0;
        era_strength_f: float = 100;
        era_thickness_f: float = 10;
        flag: int = 37;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 12;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477251336) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477250888) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477251784) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477250440) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477249992) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477249544) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477249096) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477248648) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477248200) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477252232) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477225736) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BREraser Soft";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 300;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477247752) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 30;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 2;
    gpencil_vertex_tool: char = 2;
    gpencil_sculpt_tool: char = 2;
    gpencil_weight_tool: char = 2;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477700488) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 0.5;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 8;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 2;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 100;
        era_thickness_f: float = 10;
        flag: int = 1063;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 10;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477246152) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477245704) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477246600) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477245256) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477244808) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477244360) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477243912) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477243464) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477243016) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477247048) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477223048) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BREraser Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 301;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477242568) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 30;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 2;
    gpencil_vertex_tool: char = 2;
    gpencil_sculpt_tool: char = 2;
    gpencil_weight_tool: char = 2;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477700168) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 10;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 2;
        eraser_mode: int = 2;
        active_smooth: float = 0;
        era_strength_f: float = 100;
        era_thickness_f: float = 10;
        flag: int = 37;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 13;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477241224) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477240776) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477241672) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477240328) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477239880) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477239432) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477238984) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477238536) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477238088) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477242120) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477220360) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRFill";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 302;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477237640) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 16;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 4;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477237192) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477217672) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRFill Area";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 303;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477236744) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 5;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 1;
    gpencil_vertex_tool: char = 1;
    gpencil_sculpt_tool: char = 1;
    gpencil_weight_tool: char = 1;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477699848) {
        draw_smoothfac: float = 0.1;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 1;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0.1;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 1;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 7;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 1;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 53;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 1;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 9;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477235400) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477234952) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477235848) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477234504) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477234056) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477233608) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477233160) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477232712) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477232264) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477236296) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477214984) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRFill/Deepen";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 304;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477231816) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 271366;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 7;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.7;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 9;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    sub_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477231368) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477195656) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRFlatten/Contrast";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 305;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477214280) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 7;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    sub_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477213832) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477192968) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRGrab";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 306;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477213384) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 3;
    weight: float = 1;
    size: int = 75;
    flag: int = 0;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.4;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 5;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477212936) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477190280) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRGrab Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 307;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477212488) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 3;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477699528) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 23;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 6;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 203;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477211144) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477210696) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477211592) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477210248) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477209800) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477209352) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477208904) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477208456) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477208008) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477212040) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477187592) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRInflate/Deflate";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 308;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477207560) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 4;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477207112) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477184904) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRInk Pen";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 309;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477206664) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 60;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477699208) {
        draw_smoothfac: float = 0.1;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 3;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 2085;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0.002;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 2;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477205320) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.92960566, -0.3685558];
                    default_handle_type: short = -32468;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477204872) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477205768) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477204424) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477203976) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477203528) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477203080) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477202632) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477202184) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477206216) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477182216) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRInk Pen Rough";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 310;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477201736) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 60;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477698888) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0.6;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 2;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 4;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 4133;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 3;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477200392) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.844585, -0.5354215];
                    default_handle_type: short = 16833;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477199944) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477200840) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477199496) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477199048) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477198600) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477165128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477164680) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477164232) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477201288) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477179272) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRLayer";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 311;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477163784) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0.35;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 6;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.05;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477163336) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477176584) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRLighten";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 312;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477162888) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 4;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477162440) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477173896) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMarker Bold";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 313;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477161992) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 150;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477698568) {
        draw_smoothfac: float = 0.1;
        fill_factor: float = 1;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 6;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 2084;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0.002;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 4;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477160648) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.93364376, -0.35820302];
                    default_handle_type: short = 26173;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477160200) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477161096) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477159752) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477159304) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477158856) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477158408) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477157960) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477157512) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477161544) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477171208) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMarker Chisel";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 314;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477157064) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 150;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477698248) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0.61086524;
        draw_angle_factor: float = 0.5;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 12;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.3;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 2087;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0.002;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 5;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477155720) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.4371429, -0.89939207];
                    default_handle_type: short = -18009;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477155272) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 1.0];
                    premul_ext_out: float[2] = [-0.8980768, -0.4398387];
                    default_handle_type: short = -25068;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477156168) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477154824) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477154376) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477153928) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477153480) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477153032) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477152584) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477156616) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477168520) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMask";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 315;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477152136) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 18;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 19;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 5;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477151688) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477165832) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMix";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 316;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477151240) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477150792) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477130120) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMulti-plane Scrape";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 317;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477150344) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 3;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 5;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.7;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 23;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.7;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 60;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    sub_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477149896) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477127432) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMultiply";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 318;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477149448) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 3;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477148744) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477124744) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMultires Displacement Eraser";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 319;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477148296) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 31;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 9;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477147848) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477122056) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRMultires Displacement Smear";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 320;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477147400) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 1024;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 5;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0.7;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 32;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 9;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477146952) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477119368) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRNudge";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 321;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477146504) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 11;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477146056) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477116680) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPaint";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 322;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477145608) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.0, 0.0, 0.0];
    alpha: float = 1;
    hardness: float = 0.4;
    flow: float = 1;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 1;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 28;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477145160) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477097352) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPen";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 323;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477144712) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477697928) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 1;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 1;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 2;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 2084;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0.002;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 6;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477143368) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477142920) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477143816) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477142472) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477142024) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477141576) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477141128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477140680) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477140232) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477144264) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477094664) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPencil";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 324;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477139784) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 20;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477697608) {
        draw_smoothfac: float = 0;
        fill_factor: float = 1;
        draw_strength: float = 0.6;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 1;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 2087;
        gradient_f: float = 1;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0.002;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 8;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477138440) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477137992) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477138888) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477137544) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477137096) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477136648) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477136200) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477135752) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477135304) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477139336) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477091976) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPencil Soft";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 325;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477134856) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 80;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477697288) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.4;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 1;
        input_samples: int = 10;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0.35;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 10247;
        gradient_f: float = 0.8;
        gradient_s: float[2] = [1.0, 1.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 7;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477133512) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477133064) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477133960) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477115976) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477115528) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477115080) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477114632) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477114184) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477113736) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = (@2196464844424);
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477134408) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477089288) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPinch Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 326;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477113288) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 50;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 6;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477696968) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.5;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 26;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 206;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477111944) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477111496) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477112392) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477111048) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477110600) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477110152) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477109704) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477109256) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477108808) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477112840) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477086600) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPinch/Magnify";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 327;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477108360) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 3;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477107912) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477083912) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPose";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 328;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477107464) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 0;
    flag2: int = 12;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 22;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477107016) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477064584) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRPush Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 329;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477106568) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 4;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477696648) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 24;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 204;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477105224) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477104776) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477105672) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477104328) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477103880) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477103432) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477102984) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477102536) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477102088) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477106120) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477061896) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRRandomize Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 330;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477101640) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 7;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477696328) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.5;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 22;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 207;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477100296) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477083208) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477082760) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477082312) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477081864) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477081416) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477080968) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477080520) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477080072) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477101192) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477059208) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRRotate";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 331;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477079624) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 14;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477079176) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477056520) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRScrape/Peaks";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 332;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477078728) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 271366;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 7;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.7;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 10;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    sub_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477078280) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477053832) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSculptDraw";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 333;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477077832) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 11;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000015;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.80651283;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.5, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477077384) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477051144) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSimplify";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 334;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477076936) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 15;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    sub_col: float[4] = [0.75, 0.75, 0.75, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477076488) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477031816) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSlide Relax";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 335;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477076040) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 8;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000011;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 24;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477075592) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477029128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSmear";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 336;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477075144) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 16;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 3;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 2;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477074696) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477026440) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSmooth";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 337;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477074248) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 5;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.7;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 2;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0.5;
    surface_smooth_current_vertex: float = 0.5;
    surface_smooth_iterations: int = 4;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    sub_col: float[4] = [0.877, 0.142, 0.117, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477073800) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477023752) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSmooth Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 338;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477073352) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477696008) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 19;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 4;
        sculpt_mode_flag: int = 1;
        preset_type: short = 200;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477072008) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477071560) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477072456) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477071112) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477070664) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477070216) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477069768) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477069320) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477068872) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477072904) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477021064) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSnake Hook";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 339;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477068424) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 1;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 35;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 13;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477067976) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196477018376) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSoften";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 340;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477067528) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 16;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 1;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477050440) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476999048) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRStrength Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 341;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477049992) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 2;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477695688) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 21;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 4;
        sculpt_mode_flag: int = 1;
        preset_type: short = 201;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477048648) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477048200) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477049096) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477047752) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477047304) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477046856) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477046408) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477045960) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477045512) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477049544) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476996360) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRSubtract";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 342;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477045064) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 0;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.995469, 0.09508745];
                default_handle_type: short = -10482;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 0;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 2;
    ob_mode: short = 12;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 1028;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.0, 0.0, 0.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477044616) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476993672) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRTexDraw";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 343;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477044168) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 3;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000004;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 0;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 0;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 0;
        twistfac: float = 0;
    }
    mask_mtex: MTex {
        texco: short = 1;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 0;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 0;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 16;
    weight: float = 0.5;
    size: int = 35;
    flag: int = 134218756;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0;
    area_radius_factor: float = 0;
    wet_paint_radius_factor: float = 0;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 0;
    disconnected_distance_max: float = 0;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.11547006;
    add_col: float[4] = [1.0, 1.0, 1.0, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477043720) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476990984) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRThickness Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 344;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477043272) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 1;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477695368) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.5;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 20;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 202;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477041928) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477041480) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477042376) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477041032) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477040584) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477040136) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477039688) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477039240) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477038792) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477042824) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476988296) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRThumb";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 345;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477038344) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 9;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000013;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2;
    weight: float = 1;
    size: int = 75;
    flag: int = 0;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 75;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [1.0, 1.0, 1.0];
    alpha: float = 0.5;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 1;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 1.3962634;
    sculpt_tool: char = 12;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0.4;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0.5;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 0;
    cloth_damping: float = 0;
    cloth_sim_limit: float = 0;
    cloth_sim_falloff: float = 0;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0.125;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    sub_col: float[4] = [1.0, 0.95, 0.005, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [256.0, 256.0];
    mask_stencil_dimension: float[2] = [256.0, 256.0];
    gpencil_settings: BrushGpencilSettings = null;
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477037896) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476985608) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRTint";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 346;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477037448) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 256;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 3;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477695048) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 13;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 14;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477036104) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477035656) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477036552) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477035208) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477034760) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477017672) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477017224) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477016776) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477016328) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477037000) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476966280) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRTwist Stroke";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 347;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477015880) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 512;
    weight: float = 1;
    size: int = 50;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 5;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477694728) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 25;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 205;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477014536) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477014088) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477014984) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477013640) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477013192) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477012744) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477012296) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477011848) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477011400) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477015432) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476963592) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRVertex Average";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 348;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477010952) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2048;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 2;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477694408) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 16;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 102;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477009608) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477009160) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477010056) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477008712) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477008264) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477007816) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477007368) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477006920) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196477006472) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477010504) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476960904) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRVertex Blur";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 349;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196477006024) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2048;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 1;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477694088) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 15;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 101;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196477004680) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196477004232) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196477005128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196477003784) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196477003336) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196477002888) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196477002440) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196477001992) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476935752) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196477005576) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476958216) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRVertex Draw";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 350;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476935304) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2048;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477693768) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 14;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 100;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476933960) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476933512) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476934408) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476933064) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476932616) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476932168) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476931720) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476931272) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476930824) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476934856) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476955528) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRVertex Replace";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 351;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476930376) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2048;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 5;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477693448) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 18;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 104;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476929032) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476928584) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476929480) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476928136) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476927688) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476927240) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476926792) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476926344) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476925896) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476929928) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476952840) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRVertex Smear";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 352;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476925448) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 2048;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [0.0, 0.0, 0.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 4;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477693128) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.8;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 17;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 0;
        preset_type: short = 103;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476924104) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476923656) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476924552) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476923208) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476922760) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476922312) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476921864) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476921416) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476920968) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476925000) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476949896) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRWeight Average";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 353;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476920520) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 1024;
    weight: float = 1;
    size: int = 50;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 2;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477692808) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 15;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 302;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 0;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476902536) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476902088) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476902984) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476901640) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476901192) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476900744) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476900296) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476899848) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476899400) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476920072) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476947208) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRWeight Blur";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 354;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476898952) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 1024;
    weight: float = 1;
    size: int = 50;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 1;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477692488) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 15;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 301;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 0;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476897608) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476897160) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476898056) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476896712) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476896264) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476895816) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476895368) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476894920) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476894472) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476898504) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476944520) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRWeight Draw";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 355;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476894024) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 1024;
    weight: float = 1;
    size: int = 25;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 0;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477692168) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 28;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 300;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 1;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476892680) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476892232) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476893128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476891784) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476891336) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476890888) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476890440) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476889992) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476889544) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476893576) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Brush (code:BR|@2196476941832) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "BRWeight Smear";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 356;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    clone: BrushClone {
        image: Image = null;
        offset: float[2] = [0.0, 0.0];
        alpha: float = 0.5;
    }
    curve: CurveMapping = CurveMapping (@2196476889096) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 2;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0.000000000000000000000000000000000000000000003;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.9999981, -0.001948332];
                default_handle_type: short = -32;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
    mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    mask_mtex: MTex {
        texco: short = 16;
        mapto: short = 1;
        blendtype: short = 0;
        object: Object = null;
        tex: Tex = null;
        uvname: char[68] = "";
        projx: char = 1;
        projy: char = 2;
        projz: char = 3;
        mapping: char = 0;
        brush_map_mode: char = 1;
        brush_angle_mode: char = 0;
        which_output: short = 0;
        ofs: float[3] = [0.0, 0.0, 0.0];
        size: float[3] = [1.0, 1.0, 1.0];
        rot: float = 0;
        random_angle: float = 6.2831855;
        r: float = 1;
        g: float = 0;
        b: float = 1;
        k: float = 1;
        def_var: float = 1;
        colfac: float = 1;
        alphafac: float = 1;
        timefac: float = 1;
        lengthfac: float = 1;
        clumpfac: float = 1;
        dampfac: float = 1;
        kinkfac: float = 1;
        kinkampfac: float = 1;
        roughfac: float = 1;
        padensfac: float = 1;
        gravityfac: float = 1;
        lifefac: float = 1;
        sizefac: float = 1;
        ivelfac: float = 1;
        fieldfac: float = 1;
        twistfac: float = 1;
    }
    toggle_brush: Brush = null;
    icon_imbuf: ImBuf = null;
    preview: PreviewImage = null;
    gradient: ColorBand = null;
    paint_curve: PaintCurve = null;
    icon_filepath: char[1024] = "";
    normal_weight: float = 0;
    rake_factor: float = 0;
    blend: short = 0;
    ob_mode: short = 1024;
    weight: float = 1;
    size: int = 50;
    flag: int = 263172;
    flag2: int = 0;
    sampling_flag: int = 1;
    mask_pressure: int = 0;
    jitter: float = 0;
    jitter_absolute: int = 0;
    overlay_flags: int = 0;
    spacing: int = 10;
    smooth_stroke_radius: int = 40;
    smooth_stroke_factor: float = 0.9;
    rate: float = 0.1;
    rgb: float[3] = [0.498, 1.0, 0.498];
    alpha: float = 1;
    hardness: float = 0;
    flow: float = 0;
    wet_mix: float = 0;
    wet_persistence: float = 0;
    density: float = 0;
    paint_flags: int = 0;
    tip_roundness: float = 0;
    tip_scale_x: float = 1;
    secondary_rgb: float[3] = [1.0, 1.0, 1.0];
    dash_ratio: float = 1;
    dash_samples: int = 20;
    sculpt_plane: int = 0;
    plane_offset: float = 0;
    gradient_spacing: int = 0;
    gradient_stroke_mode: char = 0;
    gradient_fill_mode: char = 0;
    falloff_shape: char = 0;
    falloff_angle: float = 0;
    sculpt_tool: char = 1;
    uv_sculpt_tool: char = 0;
    vertexpaint_tool: char = 0;
    weightpaint_tool: char = 0;
    imagepaint_tool: char = 0;
    mask_tool: char = 0;
    gpencil_tool: char = 0;
    gpencil_vertex_tool: char = 0;
    gpencil_sculpt_tool: char = 0;
    gpencil_weight_tool: char = 3;
    curves_sculpt_tool: char = 0;
    autosmooth_factor: float = 0;
    tilt_strength_factor: float = 0;
    topology_rake_factor: float = 0;
    crease_pinch_factor: float = 0.5;
    normal_radius_factor: float = 0.5;
    area_radius_factor: float = 0.5;
    wet_paint_radius_factor: float = 0.5;
    plane_trim: float = 0.5;
    height: float = 0;
    texture_sample_bias: float = 0;
    curve_preset: int = 1;
    disconnected_distance_max: float = 0.1;
    deform_target: int = 0;
    automasking_flags: int = 0;
    automasking_boundary_edges_propagation_steps: int = 1;
    elastic_deform_type: int = 0;
    elastic_deform_volume_preservation: float = 0;
    snake_hook_deform_type: int = 0;
    pose_deform_type: int = 0;
    pose_offset: float = 0;
    pose_smooth_iterations: int = 4;
    pose_ik_segments: int = 1;
    pose_origin_type: int = 0;
    boundary_deform_type: int = 0;
    boundary_falloff_type: int = 0;
    boundary_offset: float = 0;
    cloth_deform_type: int = 0;
    cloth_force_falloff_type: int = 0;
    cloth_simulation_area_type: int = 0;
    cloth_mass: float = 1;
    cloth_damping: float = 0.01;
    cloth_sim_limit: float = 2.5;
    cloth_sim_falloff: float = 0.75;
    cloth_constraint_softbody_strength: float = 0;
    smooth_deform_type: int = 0;
    surface_smooth_shape_preservation: float = 0;
    surface_smooth_current_vertex: float = 0;
    surface_smooth_iterations: int = 0;
    multiplane_scrape_angle: float = 0;
    smear_deform_type: int = 0;
    slide_deform_type: int = 0;
    texture_overlay_alpha: int = 33;
    mask_overlay_alpha: int = 33;
    cursor_overlay_alpha: int = 33;
    unprojected_radius: float = 0;
    sharp_threshold: float = 0;
    blur_kernel_radius: int = 2;
    blur_mode: int = 0;
    fill_threshold: float = 0.2;
    add_col: float[4] = [1.0, 0.39, 0.39, 0.9];
    sub_col: float[4] = [0.39, 0.39, 1.0, 0.9];
    stencil_pos: float[2] = [256.0, 256.0];
    stencil_dimension: float[2] = [256.0, 256.0];
    mask_stencil_pos: float[2] = [0.0, 0.0];
    mask_stencil_dimension: float[2] = [0.0, 0.0];
    gpencil_settings: BrushGpencilSettings = BrushGpencilSettings (@2196477691848) {
        draw_smoothfac: float = 0;
        fill_factor: float = 0;
        draw_strength: float = 0.3;
        draw_jitter: float = 0;
        draw_angle: float = 0;
        draw_angle_factor: float = 0;
        draw_random_press: float = 0;
        draw_random_strength: float = 0;
        draw_smoothlvl: short = 1;
        draw_subdivide: short = 0;
        fill_layer_mode: short = 0;
        fill_direction: short = 0;
        fill_threshold: float = 0;
        caps_type: int8_t = 0;
        flag2: int = 0;
        fill_simplylvl: int = 0;
        fill_draw_mode: int = 0;
        fill_extend_mode: int = 0;
        icon_id: int = 15;
        input_samples: int = 0;
        uv_random: float = 0;
        brush_type: int = 0;
        eraser_mode: int = 0;
        active_smooth: float = 0;
        era_strength_f: float = 0;
        era_thickness_f: float = 0;
        flag: int = 7;
        gradient_f: float = 0;
        gradient_s: float[2] = [0.0, 0.0];
        simplify_f: float = 0;
        vertex_factor: float = 1;
        vertex_mode: int = 2;
        sculpt_flag: int = 0;
        sculpt_mode_flag: int = 1;
        preset_type: short = 303;
        brush_draw_mode: short = 0;
        random_hue: float = 0;
        random_saturation: float = 0;
        random_value: float = 0;
        fill_extend_fac: float = 0;
        dilate_pixels: int = 0;
        curve_sensitivity: CurveMapping = CurveMapping (@2196476887752) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_strength: CurveMapping = CurveMapping (@2196476887304) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_jitter: CurveMapping = CurveMapping (@2196476888200) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_pressure: CurveMapping = CurveMapping (@2196476919368) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_strength: CurveMapping = CurveMapping (@2196476918920) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_uv: CurveMapping = CurveMapping (@2196476918472) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_hue: CurveMapping = CurveMapping (@2196476918024) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_saturation: CurveMapping = CurveMapping (@2196476917576) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        curve_rand_value: CurveMapping = CurveMapping (@2196476917128) {
            flag: int = 17;
            cur: int = 0;
            preset: int = 0;
            changed_timestamp: int = 0;
            curr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            clipr: rctf {
                xmin: float = 0;
                xmax: float = 1;
                ymin: float = 0;
                ymax: float = 1;
            }
            cm: CurveMap[4] = [
                CurveMap {
                    totpoint: short = 17;
                    flag: short = 0;
                    range: float = 0;
                    mintable: float = 0;
                    maxtable: float = 0;
                    ext_in: float[2] = [0.0, 1.0];
                    ext_out: float[2] = [0.0, 1.0];
                    curve: CurveMapPoint = null;
                    table: CurveMapPoint = null;
                    premultable: CurveMapPoint = null;
                    premul_ext_in: float[2] = [0.0, 0.0];
                    premul_ext_out: float[2] = [0.0, 0.0];
                    default_handle_type: short = 0;
                }
            ];
            black: float[3] = [0.0, 0.0, 0.0];
            white: float[3] = [1.0, 1.0, 1.0];
            bwmul: float[3] = [1.0, 1.0, 1.0];
            sample: float[3] = [0.0, 0.0, 0.0];
            tone: short = 0;
        }
        outline_fac: float = 0;
        material: Material = null;
        material_alt: Material = null;
    }
    curves_sculpt_settings: BrushCurvesSculptSettings = null;
    automasking_cavity_blur_steps: int = 0;
    automasking_cavity_factor: float = 1;
    automasking_cavity_curve: CurveMapping = CurveMapping (@2196476888648) {
        flag: int = 1;
        cur: int = 0;
        preset: int = 0;
        changed_timestamp: int = 1;
        curr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        clipr: rctf {
            xmin: float = 0;
            xmax: float = 1;
            ymin: float = 0;
            ymax: float = 1;
        }
        cm: CurveMap[4] = [
            CurveMap {
                totpoint: short = 1;
                flag: short = 0;
                range: float = 0;
                mintable: float = 0;
                maxtable: float = 0.000000000000000000000000000000000000000000001;
                ext_in: float[2] = [0.0, 1.0];
                ext_out: float[2] = [0.0, 1.0];
                curve: CurveMapPoint = null;
                table: CurveMapPoint = null;
                premultable: CurveMapPoint = null;
                premul_ext_in: float[2] = [0.0, 1.0];
                premul_ext_out: float[2] = [-0.70710677, -0.70710677];
                default_handle_type: short = 1268;
            }
        ];
        black: float[3] = [0.0, 0.0, 0.0];
        white: float[3] = [1.0, 1.0, 1.0];
        bwmul: float[3] = [1.0, 1.0, 1.0];
        sample: float[3] = [0.0, 0.0, 0.0];
        tone: short = 0;
    }
}
Palette (code:PL|@2196477424584) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "PLPalette";
        flag: short = 512;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 357;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    colors: ListBase<PaletteColor>[?] = [
        PaletteColor (@2196477476296) {
            next: PaletteColor = (@2196477476248);
            prev: PaletteColor = null;
            rgb: float[3] = [1.0, 1.0, 1.0];
            value: float = 0;
        }
    ];
    active_color: int = 0;
}
Collection (code:GR|@2196366379912) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRBody";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 358;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477470536) {
            next: CollectionObject = null;
            prev: CollectionObject = null;
            ob: Object = (@2196476874504);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<CollectionChild>[?] = [
        CollectionChild (@2196477470488) {
            next: CollectionChild = null;
            prev: CollectionChild = null;
            collection: Collection = (@2196366377224);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = -1;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196366380296) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRCockpit";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 359;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477470440) {
            next: CollectionObject = (@2196477470392);
            prev: CollectionObject = null;
            ob: Object = (@2196476854536);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<unknown>[] = null;
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = -1;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196366390280) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRcolliders";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 360;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477470344) {
            next: CollectionObject = (@2196477470296);
            prev: CollectionObject = null;
            ob: Object = (@2196477387784);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<unknown>[] = null;
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = 0;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196366377224) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRDoor";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 361;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477469672) {
            next: CollectionObject = (@2196477469624);
            prev: CollectionObject = null;
            ob: Object = (@2196476858120);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<unknown>[] = null;
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = -1;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196366377992) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRModel";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 362;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477469528) {
            next: CollectionObject = (@2196477469480);
            prev: CollectionObject = null;
            ob: Object = (@2196476885256);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<CollectionChild>[?] = [
        CollectionChild (@2196477469432) {
            next: CollectionChild = (@2196477469384);
            prev: CollectionChild = null;
            collection: Collection = (@2196366380296);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = 2;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196366377608) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GROther";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 363;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477469336) {
            next: CollectionObject = (@2196477469288);
            prev: CollectionObject = null;
            ob: Object = (@2196476881672);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<unknown>[] = null;
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = 7;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Collection (code:GR|@2196464828680) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "GRtriggers";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8192;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 364;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    gobject: ListBase<CollectionObject>[?] = [
        CollectionObject (@2196477469240) {
            next: CollectionObject = null;
            prev: CollectionObject = null;
            ob: Object = (@2196476876296);
            light_linking: CollectionLightLinking {
                link_state: uchar = 0;
            }
        }
    ];
    children: ListBase<unknown>[] = null;
    preview: PreviewImage = null;
    layer: int = 0;
    dupli_ofs: float[3] = [0.0, 0.0, 0.0];
    flag: uchar = 0;
    color_tag: int8_t = 4;
    lineart_usage: uchar = 0;
    lineart_flags: uchar = 0;
    lineart_intersection_mask: uchar = 0;
    lineart_intersection_priority: uchar = 0;
    view_layer: ViewLayer = null;
    runtime: Collection_Runtime {
        owner_id: ID = null;
        object_cache: ListBase<unknown>[] = null;
        object_cache_instanced: ListBase<unknown>[] = null;
        parents: ListBase<unknown>[] = null;
        gobject_hash: GHash = null;
        tag: uchar = 0;
    }
}
Object (code:OB|@2196477393160) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBCockpit";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 365;
        properties: IDProperty = IDProperty (@2196477743560) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477743400) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476694280);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373806760) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 1;
    actcol: int = 1;
    loc: float[3] = [-2.3479705, 0.41739154, 3.5098863];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -2.3479705, 0.41739154, 3.5098863, 1.0];
    imat: float[4, 4] = [1.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 2.3479705, -0.41739154, -3.5098863, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477391368) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.002";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 366;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476814344);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [4.5, -9.0, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 0.01, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 4.5, -9.0, 0.5, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 100.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.64285713, 900.0, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 215;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477389576) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.003";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 367;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476819720);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-8.0, -6.5, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 5.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -8.0, -6.5, 0.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.20000002, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 800.00006, 1.3000001, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = PartDeflect (@2196480283912) {
        flag: int = 573440;
        deflect: short = 0;
        forcefield: short = 0;
        falloff: short = 0;
        shape: short = 0;
        tex_mode: short = 0;
        kink: short = 0;
        kink_axis: short = 0;
        zdir: short = 0;
        f_strength: float = 1;
        f_damp: float = 1;
        f_flow: float = 0;
        f_wind_factor: float = 0;
        f_size: float = 0;
        f_power: float = 0;
        maxdist: float = 0;
        mindist: float = 0;
        f_power_r: float = 0;
        maxrad: float = 0;
        minrad: float = 0;
        pdef_damp: float = 0;
        pdef_rdamp: float = 0;
        pdef_perm: float = 0;
        pdef_frict: float = 0;
        pdef_rfrict: float = 0;
        pdef_stickness: float = 0;
        absorption: float = 0;
        pdef_sbdamp: float = 0.1;
        pdef_sbift: float = 0.2;
        pdef_sboft: float = 0.02;
        clump_fac: float = 0;
        clump_pow: float = 0;
        kink_freq: float = 0;
        kink_shape: float = 0;
        kink_amp: float = 0;
        free_end: float = 0;
        tex_nabla: float = 0;
        tex: Tex = null;
        rng: RNG = null;
        f_noise: float = 0;
        seed: int = 51;
        drawvec1: float[4] = [0.0, 0.0, 0.0, 0.0];
        drawvec2: float[4] = [0.0, 0.0, 0.0, 0.0];
        drawvec_falloff_min: float[3] = [0.0, 0.0, 0.0];
        drawvec_falloff_max: float[3] = [0.0, 0.0, 0.0];
        f_source: Object = null;
        pdef_cfrict: float = 5;
    }
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477387784) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.004";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 368;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476830728);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-4.5, -4.0, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 0.01, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -4.5, -4.0, 0.5, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 100.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.64285713, 400.0, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477385992) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.005";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 369;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476786952);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [1.0, -1.5, 1.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 5.0, 3.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 1.0, -1.5, 1.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.2, -0.0, 0.0, -0.0, 0.0, 0.33333334, -0.0, -100.00001, 0.3, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477384200) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.006";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 370;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476810760);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-4.5, -9.0, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 0.01, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -4.5, -9.0, 0.5, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 100.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.64285713, 900.0, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477382408) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.007";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 371;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476807176);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-1.0, -1.5, 1.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 5.0, 3.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, -1.0, -1.5, 1.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.2, 0.0, 0.0, 0.0, -0.0, 0.33333334, -0.0, 100.00001, 0.3, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477380616) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.008";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 372;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476823560);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-1.0, -7.5, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 3.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -1.0, -7.5, 0.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.33333334, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 100.00001, 2.5, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196477378824) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 373;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476783368);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [0.0, -1.0, 3.0];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [2.0, 6.0, 0.01];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [2.0, 0.0, 0.0, 0.0, 0.0, 6.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, -1.0, 3.0, 1.0];
    imat: float[4, 4] = [0.5, -0.0, -0.0, -0.0, -0.0, 0.16666667, -0.0, 0.0, -0.0, 0.0, 100.00001, -0.0, -0.0, 0.16666667, -300.00003, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476868872) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.009";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 374;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476817928);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [4.5, -4.0, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 0.01, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 4.5, -4.0, 0.5, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 100.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -0.64285713, 400.0, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476867080) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.010";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 375;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476828936);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [8.0, -6.5, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 5.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 8.0, -6.5, 0.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.20000002, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -800.00006, 1.3000001, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476865288) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.011";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 376;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476827144);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [1.0, -7.5, 0.5];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.01, 3.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [0.01, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, -7.5, 0.5, 1.0];
    imat: float[4, 4] = [100.00001, -0.0, -0.0, -0.0, -0.0, 0.33333334, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -100.00001, 2.5, -0.5, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476863496) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.012";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 377;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476836104);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [4.5, -6.5, 0.0];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 5.0, 0.01];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 4.5, -6.5, 0.0, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 0.2, -0.0, 0.0, -0.0, 0.0, 100.0, -0.0, -0.64285713, 1.3, -0.0, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476861704) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.013";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 378;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476834312);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [0.0, -2.0, 0.0];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [2.0, 8.0, 0.01];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [2.0, 0.0, 0.0, 0.0, 0.0, 8.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, 0.0, -2.0, 0.0, 1.0];
    imat: float[4, 4] = [0.5, -0.0, -0.0, -0.0, -0.0, 0.125, -0.0, 0.0, -0.0, 0.0, 100.0, -0.0, -0.0, 0.25, -0.0, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476859912) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBcollider.014";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 379;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476870920);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-4.5, -6.5, 0.0];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [7.0, 5.0, 0.01];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [7.0, 0.0, 0.0, 0.0, 0.0, 5.0, 0.0, 0.0, 0.0, 0.0, 0.01, 0.0, -4.5, -6.5, 0.0, 1.0];
    imat: float[4, 4] = [0.14285713, -0.0, -0.0, -0.0, -0.0, 0.2, 0.0, 0.0, 0.0, -0.0, 100.0, -0.0, 0.64285713, 1.3, -0.0, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476858120) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBFrame";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 380;
        properties: IDProperty = IDProperty (@2196477743240) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477743080) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476115208);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373806056) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 1;
    actcol: int = 1;
    loc: float[3] = [1.9001891e-7, -0.10000014, 2.695737];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.9001891e-7, -0.10000014, 2.695737, 1.0];
    imat: float[4, 4] = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -1.9001891e-7, 0.10000014, -2.695737, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476856328) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBLeft";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8199;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 381;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = AnimData (@2196467350664) {
        action: bAction = null;
        tmpact: bAction = null;
        nla_tracks: ListBase<NlaTrack>[?] = [
            NlaTrack (@2196467350552) {
                next: NlaTrack = null;
                prev: NlaTrack = null;
                strips: ListBase<NlaStrip>[?] = [
                    NlaStrip (@2196477424360) {
                        next: NlaStrip = null;
                        prev: NlaStrip = null;
                        strips: ListBase<unknown>[] = null;
                        act: bAction = (@2196475951880);
                        fcurves: ListBase<unknown>[] = null;
                        modifiers: ListBase<unknown>[] = null;
                        name: char[64] = "Open Door";
                        influence: float = 1;
                        strip_time: float = 0;
                        start: float = 0;
                        end: float = 20;
                        actstart: float = 0;
                        actend: float = 20;
                        repeat: float = 1;
                        scale: float = 1;
                        blendin: float = 0;
                        blendout: float = 0;
                        blendmode: short = 0;
                        extendmode: short = 0;
                        type: short = 0;
                        speaker_handle: void = null;
                        flag: int = 514;
                        orig_strip: NlaStrip = null;
                    }
                ];
                flag: int = 65536;
                index: int = 0;
                name: char[64] = "Open Door";
            }
        ];
        act_track: NlaTrack = null;
        actstrip: NlaStrip = null;
        drivers: ListBase<unknown>[] = null;
        overrides: ListBase<unknown>[] = null;
        driver_array: FCurve[] = null;
        flag: int = 0;
        act_blendmode: short = 0;
        act_extendmode: short = 0;
        act_influence: float = 1;
    }
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476111624);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373805912) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 2;
    actcol: int = 1;
    loc: float[3] = [-0.437158, -0.10062361, 1.5874283];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, -0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.437158, -0.10062361, 1.5874283, 1.0];
    imat: float[4, 4] = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.437158, 0.10062361, -1.5874283, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476854536) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBMetal Grid";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 382;
        properties: IDProperty = IDProperty (@2196477742920) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477742760) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476776200);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373805896) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 2;
    actcol: int = 2;
    loc: float[3] = [-0.4009165, 2.4791017, 1.2693032];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.4009165, 2.4791017, 1.2693032, 1.0];
    imat: float[4, 4] = [1.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.4009165, -2.4791017, -1.2693032, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476885256) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBMonitor";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 383;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476779784);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373805864) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 1;
    actcol: int = 1;
    loc: float[3] = [-0.87998843, -2.000927, 0.29709482];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [1.5707963, -5.8860927e-8, 1.5707965];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [-1.6292068e-7, 1.0, 5.8860927e-8, 0.0, -7.549789e-8, -5.8860937e-8, 1.0, 0.0, 1.0, 1.6292067e-7, 7.54979e-8, 0.0, -0.87998843, -2.000927, 0.29709482, 1.0];
    imat: float[4, 4] = [-1.6292067e-7, -7.5497894e-8, 1.0, -0.0, 1.0, -5.8860937e-8, 1.6292068e-7, 0.0, 5.8860927e-8, 1.0, 7.5497894e-8, -0.0, 2.0009267, -0.297095, 0.87998873, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 2048;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476883464) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBPlane";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 384;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476777992);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 1;
    loc: float[3] = [3.2176042, -8.822535, 1.378057];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 3.2176042, -8.822535, 1.378057, 1.0];
    imat: float[4, 4] = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, -3.2176042, 8.822535, -1.378057, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 2048;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476881672) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBPoint";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 385;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 10;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196464829064);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-0.056871593, 2.6973047, 2.134653];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.056871593, 2.6973047, 2.134653, 1.0];
    imat: float[4, 4] = [1.0, -0.0, 0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.056871593, -2.6973047, -2.134653, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 2048;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 5;
    upflag: short = 1;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 1032;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476879880) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBPoint.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 386;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 10;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196464830600);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [-0.056871593, -1.0906172, 2.134653];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -0.056871593, -1.0906172, 2.134653, 1.0];
    imat: float[4, 4] = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 0.056871593, 1.0906172, -2.134653, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 2048;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 5;
    upflag: short = 1;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 1032;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476878088) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBRight";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 8199;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 387;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = AnimData (@2196467351448) {
        action: bAction = null;
        tmpact: bAction = null;
        nla_tracks: ListBase<NlaTrack>[?] = [
            NlaTrack (@2196467351336) {
                next: NlaTrack = null;
                prev: NlaTrack = null;
                strips: ListBase<NlaStrip>[?] = [
                    NlaStrip (@2196477424136) {
                        next: NlaStrip = null;
                        prev: NlaStrip = null;
                        strips: ListBase<unknown>[] = null;
                        act: bAction = (@2196475951560);
                        fcurves: ListBase<unknown>[] = null;
                        modifiers: ListBase<unknown>[] = null;
                        name: char[64] = "Open Door";
                        influence: float = 1;
                        strip_time: float = 0;
                        start: float = 0;
                        end: float = 20;
                        actstart: float = 0;
                        actend: float = 20;
                        repeat: float = 1;
                        scale: float = 1;
                        blendin: float = 0;
                        blendout: float = 0;
                        blendmode: short = 0;
                        extendmode: short = 0;
                        type: short = 0;
                        speaker_handle: void = null;
                        flag: int = 514;
                        orig_strip: NlaStrip = null;
                    }
                ];
                flag: int = 65536;
                index: int = 0;
                name: char[64] = "Open Door";
            }
        ];
        act_track: NlaTrack = null;
        actstrip: NlaStrip = null;
        drivers: ListBase<unknown>[] = null;
        overrides: ListBase<unknown>[] = null;
        driver_array: FCurve[] = null;
        flag: int = 0;
        act_blendmode: short = 0;
        act_extendmode: short = 0;
        act_influence: float = 1;
    }
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476772616);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373805848) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 2;
    actcol: int = 1;
    loc: float[3] = [0.43757352, -0.105318785, 1.5874283];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, -0.0, 3.1415925];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [-1.0, 1.509958e-7, 0.0, 0.0, -1.509958e-7, -1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.43757352, -0.105318785, 1.5874283, 1.0];
    imat: float[4, 4] = [-1.0, -1.509958e-7, -0.0, -0.0, 1.509958e-7, -1.0, -0.0, 0.0, -0.0, 0.0, 1.0, -0.0, 0.43757355, -0.10531872, -1.5874283, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476876296) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBtrigger.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 388;
        properties: IDProperty = IDProperty (@2196477742600) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477742440) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 8;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "test-obj";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 1072693248;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = IDPropertyUIData (@2196477356616) {
                            description: char = DrawDataList (@2196373805832) {
                                first: DrawData = null;
                                last: DrawData = null;
                            }
                            rna_subtype: int = 0;
                        }
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476033288);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = null;
    totcol: int = 0;
    actcol: int = 0;
    loc: float[3] = [4.7683716e-7, -2.499999, 1.5000001];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [2.0, 3.0, 3.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [2.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 0.0, 0.0, 0.0, 3.0, 0.0, 4.7683716e-7, -2.499999, 1.5000001, 1.0];
    imat: float[4, 4] = [0.5, -0.0, -0.0, -0.0, -0.0, 0.33333334, -0.0, 0.0, -0.0, 0.0, 0.33333334, -0.0, -2.3841858e-7, 0.833333, -0.50000006, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Object (code:OB|@2196476874504) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "OBTunnel";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 389;
        properties: IDProperty = IDProperty (@2196477742280) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477742120) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    sculpt: SculptSession = null;
    type: short = 1;
    partype: short = 0;
    par1: int = 0;
    par2: int = 0;
    par3: int = 0;
    parsubstr: char[64] = "";
    parent: Object = null;
    track: Object = null;
    proxy: Object = null;
    proxy_group: Object = null;
    proxy_from: Object = null;
    ipo: Ipo = null;
    action: bAction = null;
    poselib: bAction = null;
    pose: bPose = null;
    data: void = (@2196476692488);
    gpd: bGPdata = null;
    avs: bAnimVizSettings {
        recalc: short = 0;
        path_type: short = 0;
        path_step: short = 1;
        path_range: short = 0;
        path_viewflag: short = 6;
        path_bakeflag: short = 2;
        path_sf: int = 1;
        path_ef: int = 250;
        path_bc: int = 10;
        path_ac: int = 10;
    }
    mpath: bMotionPath = null;
    constraintChannels: ListBase<unknown>[] = null;
    effect: ListBase<unknown>[] = null;
    defbase: ListBase<unknown>[] = null;
    fmaps: ListBase<unknown>[] = null;
    modifiers: ListBase<unknown>[] = null;
    greasepencil_modifiers: ListBase<unknown>[] = null;
    shader_fx: ListBase<unknown>[] = null;
    mode: int = 0;
    restore_mode: int = 0;
    mat: Material[] = null;
    matbits: char = DrawDataList (@2196373805800) {
        first: DrawData = null;
        last: DrawData = null;
    }
    totcol: int = 1;
    actcol: int = 1;
    loc: float[3] = [-16.040508, -1.9999981, -22.239946];
    dloc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [1.0, 1.0, 1.0];
    dsize: float[3] = [0.0, 0.0, 0.0];
    dscale: float[3] = [1.0, 1.0, 1.0];
    rot: float[3] = [0.0, 0.0, 0.0];
    drot: float[3] = [0.0, 0.0, 0.0];
    quat: float[4] = [1.0, 0.0, 0.0, 0.0];
    dquat: float[4] = [1.0, 0.0, 0.0, 0.0];
    rotAxis: float[3] = [0.0, 1.0, 0.0];
    drotAxis: float[3] = [0.0, 1.0, 0.0];
    rotAngle: float = 0;
    drotAngle: float = 0;
    obmat: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, -16.040508, -1.9999981, -22.239946, 1.0];
    imat: float[4, 4] = [1.0, -0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, -0.0, 1.0, -0.0, 16.040508, 1.9999981, 22.239946, 1.0];
    parentinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    constinv: float[4, 4] = [1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0];
    lay: int = 0;
    flag: short = 3072;
    colbits: short = 0;
    transflag: short = 0;
    protectflag: short = 1024;
    trackflag: short = 1;
    upflag: short = 2;
    nlaflag: short = 0;
    duplicator_visibility_flag: char = 3;
    base_flag: short = 214;
    base_local_view_bits: short = 0;
    col_group: short = 1;
    col_mask: short = -1;
    rotmode: short = 1;
    boundtype: char = 0;
    collision_boundtype: char = 0;
    dtx: short = 0;
    dt: char = 5;
    empty_drawtype: char = 2;
    empty_drawsize: float = 1;
    dupfacesca: float = 1;
    index: short = 0;
    actdef: short = 0;
    col: float[4] = [1.0, 1.0, 1.0, 1.0];
    softflag: short = 0;
    restrictflag: short = 0;
    shapenr: short = 0;
    shapeflag: char = 0;
    constraints: ListBase<unknown>[] = null;
    nlastrips: ListBase<unknown>[] = null;
    hooks: ListBase<unknown>[] = null;
    particlesystem: ListBase<unknown>[] = null;
    pd: PartDeflect = null;
    soft: SoftBody = null;
    dup_group: Collection = null;
    fluidsimSettings: FluidsimSettings = null;
    pc_ids: ListBase<unknown>[] = null;
    rigidbody_object: RigidBodyOb = null;
    rigidbody_constraint: RigidBodyCon = null;
    ima_ofs: float[2] = [0.0, 0.0];
    iuser: ImageUser = null;
    empty_image_visibility_flag: char = 0;
    empty_image_depth: char = 0;
    empty_image_flag: char = 0;
    modifier_flag: uchar = 0;
    preview: PreviewImage = null;
    lineart: ObjectLineArt {
        usage: short = 0;
        flags: short = 0;
        crease_threshold: float = 2.443461;
        intersection_priority: char = 0;
    }
    lightgroup: LightgroupMembership = null;
    light_linking: LightLinking = null;
    lightprobe_cache: LightProbeObjectCache = null;
    runtime: Object_Runtime {
        last_data_mask: CustomData_MeshMasks {
            vmask: uint64_t = 0;
            emask: uint64_t = 0;
            fmask: uint64_t = 0;
            pmask: uint64_t = 0;
            lmask: uint64_t = 0;
        }
        last_need_mapping: char = 0;
        parent_display_origin: float[3] = [0.0, 0.0, 0.0];
        select_id: int = 0;
        is_data_eval_owned: char = 0;
        overlay_mode_transfer_start_time: double = 0;
        bb: BoundBox = null;
        data_orig: ID = null;
        data_eval: ID = null;
        geometry_set_eval: GeometrySetHandle = null;
        mesh_deform_eval: Mesh = null;
        editmesh_eval_cage: Mesh = null;
        editmesh_bb_cage: BoundBox = null;
        gpd_orig: bGPdata = null;
        gpd_eval: bGPdata = null;
        object_as_temp_mesh: Mesh = null;
        pose_backup: PoseBackup = null;
        object_as_temp_curve: Curve = null;
        curve_cache: CurveCache = null;
        local_collections_bits: short = 0;
        crazyspace_deform_imats: fn() = null
        crazyspace_deform_cos: fn() = null
        crazyspace_num_verts: int = 0;
    }
}
Lamp (code:LA|@2196464829064) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "LAPoint";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 390;
        properties: IDProperty = IDProperty (@2196477741960) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477741800) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<IDProperty>[?] = [
                                IDProperty (@2196477741640) {
                                    next: IDProperty = (@2196477741480);
                                    prev: IDProperty = null;
                                    type: char = 1;
                                    subtype: char = 0;
                                    flag: short = 0;
                                    name: char[64] = "max_bounces";
                                    data: IDPropertyData {
                                        pointer: void = null;
                                        group: ListBase<unknown>[] = null;
                                        val: int = 1024;
                                        val2: int = 0;
                                    }
                                    len: int = 0;
                                    totallen: int = 0;
                                    ui_data: IDPropertyUIData = null;
                                }
                            ];
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 2;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    type: short = 0;
    flag: short = 0;
    mode: int = 1;
    r: float = 1;
    g: float = 1;
    b: float = 1;
    energy_new: float = 140.3;
    radius: float = 0;
    spotsize: float = 0.7853982;
    spotblend: float = 0.15;
    area_shape: short = 0;
    area_size: float = 0.25;
    area_sizey: float = 0.25;
    area_sizez: float = 0.25;
    area_spread: float = 3.1415927;
    sun_angle: float = 0.009180432;
    shdwr: float = 0;
    shdwg: float = 0;
    shdwb: float = 0;
    pr_texture: short = 0;
    use_nodes: short = 0;
    bias: float = 1;
    clipsta: float = 0.05;
    clipend: float = 40;
    cascade_max_dist: float = 200;
    cascade_exponent: float = 0.8;
    cascade_fade: float = 0.1;
    cascade_count: int = 4;
    contact_dist: float = 0.2;
    contact_bias: float = 0.03;
    contact_thickness: float = 0.2;
    diff_fac: float = 1;
    volume_fac: float = 1;
    spec_fac: float = 1;
    att_dist: float = 40;
    shadow_softness_factor: float = 1;
    shadow_trace_distance: float = 10;
    preview: PreviewImage = null;
    nodetree: bNodeTree = null;
    ipo: Ipo = null;
    energy: float = 140.3;
}
Lamp (code:LA|@2196464830600) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "LAPoint.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 391;
        properties: IDProperty = IDProperty (@2196477741320) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196477741160) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 6;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "cycles";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<IDProperty>[?] = [
                                IDProperty (@2196477741000) {
                                    next: IDProperty = (@2196477740840);
                                    prev: IDProperty = null;
                                    type: char = 1;
                                    subtype: char = 0;
                                    flag: short = 0;
                                    name: char[64] = "max_bounces";
                                    data: IDPropertyData {
                                        pointer: void = null;
                                        group: ListBase<unknown>[] = null;
                                        val: int = 1024;
                                        val2: int = 0;
                                    }
                                    len: int = 0;
                                    totallen: int = 0;
                                    ui_data: IDPropertyUIData = null;
                                }
                            ];
                            val: int = 0;
                            val2: int = 0;
                        }
                        len: int = 2;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = null;
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476872712) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "LAPoint";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    type: short = 0;
    flag: short = 0;
    mode: int = 1;
    r: float = 1;
    g: float = 1;
    b: float = 1;
    energy_new: float = 140.3;
    radius: float = 0;
    spotsize: float = 0.7853982;
    spotblend: float = 0.15;
    area_shape: short = 0;
    area_size: float = 0.25;
    area_sizey: float = 0.25;
    area_sizez: float = 0.25;
    area_spread: float = 3.1415927;
    sun_angle: float = 0.009180432;
    shdwr: float = 0;
    shdwg: float = 0;
    shdwb: float = 0;
    pr_texture: short = 0;
    use_nodes: short = 0;
    bias: float = 1;
    clipsta: float = 0.05;
    clipend: float = 40;
    cascade_max_dist: float = 200;
    cascade_exponent: float = 0.8;
    cascade_fade: float = 0.1;
    cascade_count: int = 4;
    contact_dist: float = 0.2;
    contact_bias: float = 0.03;
    contact_thickness: float = 0.2;
    diff_fac: float = 1;
    volume_fac: float = 1;
    spec_fac: float = 1;
    att_dist: float = 40;
    shadow_softness_factor: float = 1;
    shadow_trace_distance: float = 10;
    preview: PreviewImage = null;
    nodetree: bNodeTree = null;
    ipo: Ipo = null;
    energy: float = 140.3;
}
Mesh (code:ME|@2196476870920) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 392;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382564056) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805768) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476836104) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 393;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563928) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805720) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476834312) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.002";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 394;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476832520) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.001";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563800) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805672) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476830728) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.003";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 395;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382564184) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805624) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476828936) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.004";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 396;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382562840) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805576) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476827144) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.005";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 397;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476825352) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.004";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382562776) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805528) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476823560) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.006";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 398;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476821768) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.005";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563480) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805480) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476819720) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.007";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 399;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563352) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805432) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476817928) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.008";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 400;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476816136) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.003";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563416) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805384) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476814344) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.009";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 401;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476812552) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.008";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196382563672) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805336) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476810760) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.010";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 402;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476808968) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.009";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196467439512) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805288) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476807176) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.011";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 403;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476805384) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.007";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196467439640) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805240) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476786952) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.012";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 404;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476785160) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.011";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196467440920) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805192) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476783368) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MECube.013";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 405;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476781576) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MECube.002";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196467440984) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373805144) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 0.0, 0.0];
    size: float[3] = [0.5, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 585578932;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476779784) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 406;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 28;
    totedge: int = 48;
    totpoly: int = 21;
    totloop: int = 88;
    poly_offset_indices: int = DrawDataList (@2196370471752) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[28] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[48] = [
                    vec2i {
                        x: int = 1;
                        y: int = 6;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer = CustomDataLayer (@2196476737032) {
            type: int = 50;
            offset: int = 0;
            flag: int = 0;
            active: int = 0;
            active_rnd: int = 0;
            active_clone: int = 0;
            active_mask: int = 0;
            uid: int = 0;
            name: char[68] = "sharp_face";
            data: void = DrawDataList (@2196476981928) {
                first: DrawData = null;
                last: DrawData = null;
            }
            anonymous_id: AnonymousAttributeIDHandle = null;
            sharing_info: ImplicitSharingInfoHandle = null;
        }
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 1;
        maxlayer: int = 1;
        totsize: int = 1;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[88] = [
                    MIntProperty {
                        i: int = 10;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = 17;
    texcomesh: Mesh = null;
    loc: float[3] = [0.0, 1.5, -0.08500014];
    size: float[3] = [1.0, 0.5, 0.015000001];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 2009355259;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 1;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476777992) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 407;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 22;
    totedge: int = 35;
    totpoly: int = 14;
    totloop: int = 58;
    poly_offset_indices: int = DrawDataList (@2196467281144) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[22] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer = CustomDataLayer (@2196476735592) {
            type: int = 46;
            offset: int = 0;
            flag: int = 0;
            active: int = 0;
            active_rnd: int = 0;
            active_clone: int = 0;
            active_mask: int = 0;
            uid: int = 0;
            name: char[68] = ".edge_verts";
            data: void[35] = [
                vec2i {
                    x: int = 2;
                    y: int = 0;
                }
            ];
            anonymous_id: AnonymousAttributeIDHandle = null;
            sharing_info: ImplicitSharingInfoHandle = null;
        }
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1];
        totlayer: int = 1;
        maxlayer: int = 1;
        totsize: int = 8;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer = CustomDataLayer (@2196476735432) {
            type: int = 50;
            offset: int = 0;
            flag: int = 0;
            active: int = 0;
            active_rnd: int = 0;
            active_clone: int = 0;
            active_mask: int = 0;
            uid: int = 0;
            name: char[68] = "sharp_face";
            data: void = DrawDataList (@2196476981896) {
                first: DrawData = null;
                last: DrawData = null;
            }
            anonymous_id: AnonymousAttributeIDHandle = null;
            sharing_info: ImplicitSharingInfoHandle = null;
        }
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 1;
        maxlayer: int = 1;
        totsize: int = 1;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[58] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = 0;
    texcomesh: Mesh = null;
    loc: float[3] = [-3.217604, 2.3225346, -0.878057];
    size: float[3] = [8.0, 2.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 320209251;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476776200) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.002";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 408;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476774408) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MEPlane";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 204;
    totedge: int = 388;
    totpoly: int = 188;
    totloop: int = 776;
    poly_offset_indices: int = DrawDataList (@2196470959896) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[204] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[388] = [
                    vec2i {
                        x: int = 27;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "material_index";
                data: void[188] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 5;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[776] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.40091646, -0.47910178, 0.2306968];
    size: float[3] = [1.0, 1.0, 1.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = -1520799999;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 2;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476772616) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.004";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 409;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476705032) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MEPlane.023";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 96;
    totedge: int = 170;
    totpoly: int = 70;
    totloop: int = 316;
    poly_offset_indices: int = DrawDataList (@2196470182488) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[96] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[170] = [
                    vec2i {
                        x: int = 3;
                        y: int = 2;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 10;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "material_index";
                data: void[70] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 6;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[316] = [
                    MIntProperty {
                        i: int = 31;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = MSelect (@2196373805096) {
        index: int = 11;
        type: int = 2;
    }
    totselect: int = 1;
    act_face: int = 11;
    texcomesh: Mesh = null;
    loc: float[3] = [0.07215798, -0.005376417, -0.08742833];
    size: float[3] = [0.5150001, 0.05000007, 1.38];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 723752552;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 2;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476694280) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.014";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 410;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 36;
    totedge: int = 70;
    totpoly: int = 16;
    totloop: int = 68;
    poly_offset_indices: int = DrawDataList (@2196467283832) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[36] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[70] = [
                    vec2i {
                        x: int = 3;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196476981800) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[68] = [
                    MIntProperty {
                        i: int = 19;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [2.3479705, 0.58260834, -2.0098863];
    size: float[3] = [1.0, 1.0000001, 1.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = -1520799999;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 1;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476692488) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.017";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 411;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476690696) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MEPlane.014";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 32;
    totedge: int = 64;
    totpoly: int = 16;
    totloop: int = 64;
    poly_offset_indices: int = DrawDataList (@2196467284984) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[32] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[64] = [
                    vec2i {
                        x: int = 17;
                        y: int = 21;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer = CustomDataLayer (@2196476730152) {
            type: int = 50;
            offset: int = 0;
            flag: int = 0;
            active: int = 0;
            active_rnd: int = 0;
            active_clone: int = 0;
            active_mask: int = 0;
            uid: int = 0;
            name: char[68] = "sharp_face";
            data: void = DrawDataList (@2196476981736) {
                first: DrawData = null;
                last: DrawData = null;
            }
            anonymous_id: AnonymousAttributeIDHandle = null;
            sharing_info: ImplicitSharingInfoHandle = null;
        }
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 1;
        maxlayer: int = 1;
        totsize: int = 1;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[64] = [
                    MIntProperty {
                        i: int = 2;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = 9;
    texcomesh: Mesh = null;
    loc: float[3] = [16.040508, -2.1457672e-6, 23.739946];
    size: float[3] = [1.0000005, 2.0000002, 1.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = -1520799999;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 1;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476115208) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.019";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 412;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476113416) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MEPlane.017";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 16;
    totedge: int = 32;
    totpoly: int = 16;
    totloop: int = 64;
    poly_offset_indices: int = DrawDataList (@2196467272600) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[16] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[32] = [
                    vec2i {
                        x: int = 11;
                        y: int = 15;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer = CustomDataLayer (@2196476728712) {
            type: int = 50;
            offset: int = 0;
            flag: int = 0;
            active: int = 0;
            active_rnd: int = 0;
            active_clone: int = 0;
            active_mask: int = 0;
            uid: int = 0;
            name: char[68] = "sharp_face";
            data: void = DrawDataList (@2196476981704) {
                first: DrawData = null;
                last: DrawData = null;
            }
            anonymous_id: AnonymousAttributeIDHandle = null;
            sharing_info: ImplicitSharingInfoHandle = null;
        }
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 1;
        maxlayer: int = 1;
        totsize: int = 1;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[64] = [
                    MIntProperty {
                        i: int = 10;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = 4;
    texcomesh: Mesh = null;
    loc: float[3] = [-2.0861626e-7, -1.1920929e-7, -1.1957369];
    size: float[3] = [0.98, 0.10000026, 1.48];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = -1520799999;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 1;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476111624) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEPlane.023";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 413;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = LibraryWeakReference (@2196476109832) {
            library_filepath: char[1024] = "C:\Users\MARCO~1.SIL\AppData\Local\Temp\copybuffer.blend";
            library_id_name: char[66] = "MEPlane.022";
        }
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[%?] = [Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
];
    totvert: int = 96;
    totedge: int = 170;
    totpoly: int = 70;
    totloop: int = 316;
    poly_offset_indices: int = DrawDataList (@2196470183768) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[96] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, 2, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 29;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[170] = [
                    vec2i {
                        x: int = 3;
                        y: int = 2;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 10;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "material_index";
                data: void[70] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 6;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[316] = [
                    MIntProperty {
                        i: int = 31;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [0.07215789, 0.0006235838, -0.08742833];
    size: float[3] = [0.515, 0.05000007, 1.38];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 723752552;
    face_sets_color_default: int = 1;
    active_color_attribute: char = null;
    default_color_attribute: char = null;
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 2;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
Mesh (code:ME|@2196476033288) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MEtrigger-mesh.001";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 414;
        properties: IDProperty = IDProperty (@2196476725992) {
            next: IDProperty = null;
            prev: IDProperty = null;
            type: char = 6;
            subtype: char = 0;
            flag: short = 0;
            name: char[64] = "RNA_struct_idprops";
            data: IDPropertyData {
                pointer: void = null;
                group: ListBase<IDProperty>[?] = [
                    IDProperty (@2196476725832) {
                        next: IDProperty = null;
                        prev: IDProperty = null;
                        type: char = 8;
                        subtype: char = 0;
                        flag: short = 0;
                        name: char[64] = "test";
                        data: IDPropertyData {
                            pointer: void = null;
                            group: ListBase<unknown>[] = null;
                            val: int = 0;
                            val2: int = 1072693248;
                        }
                        len: int = 0;
                        totallen: int = 0;
                        ui_data: IDPropertyUIData = IDPropertyUIData (@2196477356424) {
                            description: char = DrawDataList (@2196373805032) {
                                first: DrawData = null;
                                last: DrawData = null;
                            }
                            rna_subtype: int = 0;
                        }
                    }
                ];
                val: int = 0;
                val2: int = 0;
            }
            len: int = 1;
            totallen: int = 0;
            ui_data: IDPropertyUIData = null;
        }
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    ipo: Ipo = null;
    key: Key = null;
    mat: Material[] = null;
    totvert: int = 8;
    totedge: int = 12;
    totpoly: int = 6;
    totloop: int = 24;
    poly_offset_indices: int = DrawDataList (@2196467441176) {
        first: DrawData = null;
        last: DrawData = null;
    }
    vdata: CustomData {
        layers: CustomDataLayer[4] = [
            CustomDataLayer {
                type: int = 2;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = "";
                data: void[8] = [
                    MDeformVert {
                        dw: MDeformWeight = null;
                        totweight: int = 0;
                        flag: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, -1, 3, -1, -1];
        totlayer: int = 4;
        maxlayer: int = 4;
        totsize: int = 45;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    edata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 46;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".edge_verts";
                data: void[12] = [
                    vec2i {
                        x: int = 2;
                        y: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, 1, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 9;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    pdata: CustomData {
        layers: CustomDataLayer[2] = [
            CustomDataLayer {
                type: int = 50;
                offset: int = 0;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".select_poly";
                data: void = DrawDataList (@2196373804968) {
                    first: DrawData = null;
                    last: DrawData = null;
                }
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1];
        totlayer: int = 2;
        maxlayer: int = 2;
        totsize: int = 2;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    ldata: CustomData {
        layers: CustomDataLayer[3] = [
            CustomDataLayer {
                type: int = 11;
                offset: int = 12;
                flag: int = 0;
                active: int = 0;
                active_rnd: int = 0;
                active_clone: int = 0;
                active_mask: int = 0;
                uid: int = 0;
                name: char[68] = ".corner_vert";
                data: void[24] = [
                    MIntProperty {
                        i: int = 0;
                    }
                ];
                anonymous_id: AnonymousAttributeIDHandle = null;
                sharing_info: ImplicitSharingInfoHandle = null;
            }
        ];
        typemap: int[53] = [-1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 3, -1, -1, -1];
        totlayer: int = 3;
        maxlayer: int = 3;
        totsize: int = 28;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    vertex_group_names: ListBase<unknown>[] = null;
    vertex_group_active_index: int = 0;
    attributes_active_index: int = 0;
    edit_mesh: BMEditMesh = null;
    mselect: MSelect = null;
    totselect: int = 0;
    act_face: int = -1;
    texcomesh: Mesh = null;
    loc: float[3] = [-7.1525574e-7, -4.7683716e-7, 0.0];
    size: float[3] = [0.49999976, 0.5, 0.5];
    texflag: char = 3;
    editflag: char = 1;
    flag: ushort = 53504;
    smoothresh: float = 0.5235988;
    remesh_voxel_size: float = 0.1;
    remesh_voxel_adaptivity: float = 0;
    face_sets_color_seed: int = 1532238608;
    face_sets_color_default: int = 1;
    active_color_attribute: char = DrawDataList (@2196373805016) {
        first: DrawData = null;
        last: DrawData = null;
    }
    default_color_attribute: char = DrawDataList (@2196373805000) {
        first: DrawData = null;
        last: DrawData = null;
    }
    symmetry: char = 0;
    remesh_mode: char = 0;
    totcol: short = 0;
    cd_flag: char = 0;
    subdiv: char = 0;
    subdivr: char = 0;
    subsurftype: char = 0;
    mpoly: MPoly = null;
    mloop: MLoop = null;
    mvert: MVert = null;
    medge: MEdge = null;
    dvert: MDeformVert = null;
    mtface: MTFace = null;
    tface: TFace = null;
    mcol: MCol = null;
    mface: MFace = null;
    fdata: CustomData {
        layers: CustomDataLayer = null;
        typemap: int[53] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        totlayer: int = 0;
        maxlayer: int = 0;
        totsize: int = 0;
        pool: BLI_mempool = null;
        external: CustomDataExternal = null;
    }
    totface: int = 0;
    runtime: MeshRuntimeHandle = null;
}
World (code:WO|@2196464830216) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "WOWorld";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 415;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    drawdata: DrawDataList {
        first: DrawData = null;
        last: DrawData = null;
    }
    texact: short = 0;
    mistype: short = 0;
    horr: float = 0.05087609;
    horg: float = 0.05087609;
    horb: float = 0.05087609;
    exposure: float = 1;
    exp: float = 0;
    range: float = 1;
    mode: short = 32;
    misi: float = 0;
    miststa: float = 5;
    mistdist: float = 25;
    misthi: float = 0;
    aodist: float = 10;
    aoenergy: float = 1;
    flag: short = 0;
    probe_resolution: int = 10;
    ipo: Ipo = null;
    pr_texture: short = 0;
    use_nodes: short = 1;
    preview: PreviewImage = PreviewImage (@2196476718728) {
        w: int[2] = [0, 0];
        h: int[2] = [0, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1, 1];
        rect: int[2] = [
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    nodetree: bNodeTree = bNodeTree (@2196476095496) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 416;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196464830216);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [0.0, 0.0];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196464831752) {
                next: bNode = (@2196464832136);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476094856) {
                        next: bNodeSocket = (@2196476094216);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371528) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196464832136) {
                                next: bNode = null;
                                prev: bNode = (@2196464831752);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196476093576) {
                                        next: bNodeSocket = (@2196476092936);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Color";
                                        name: char[64] = "Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981608) {
                                            value: float[4] = [0.05087609, 0.05087609, 0.05087609, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196476091656) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Background";
                                        name: char[64] = "Background";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Background";
                                identifier: int = 2059575400;
                                flag: int = 65555;
                                idname: char[64] = "ShaderNodeBackground";
                                typeinfo: bNodeType = null;
                                type: short = 130;
                                custom1: short = 0;
                                custom2: short = 0;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 140;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 0;
                                panel_states_array: bNodePanelState = null;
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196464831752);
                            fromsock: bNodeSocket = (@2196476091656);
                            tosock: bNodeSocket = (@2196476094856);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "World Output";
                identifier: int = 1021891470;
                flag: int = 65603;
                idname: char[64] = "ShaderNodeOutputWorld";
                typeinfo: bNodeType = null;
                type: short = 125;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371528,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 0;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    lightgroup: LightgroupMembership = null;
    gpumaterial: ListBase<unknown>[] = null;
}
FreestyleLineStyle (code:LS|@2196476091016) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "LSLineStyle";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 417;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    r: float = 0;
    g: float = 0;
    b: float = 0;
    alpha: float = 1;
    thickness: float = 3;
    thickness_position: int = 1;
    thickness_ratio: float = 0.5;
    flag: int = 10242;
    caps: int = 1;
    chaining: int = 1;
    rounds: int = 3;
    split_length: float = 100;
    min_angle: float = 0;
    max_angle: float = 0;
    min_length: float = 0;
    max_length: float = 10000;
    chain_count: int = 10;
    split_dash1: short = 0;
    split_gap1: short = 0;
    split_dash2: short = 0;
    split_gap2: short = 0;
    split_dash3: short = 0;
    split_gap3: short = 0;
    sort_key: int = 1;
    integration_type: int = 1;
    texstep: float = 1;
    texact: short = 0;
    pr_texture: short = 0;
    use_nodes: short = 0;
    dash1: short = 0;
    gap1: short = 0;
    dash2: short = 0;
    gap2: short = 0;
    dash3: short = 0;
    gap3: short = 0;
    panel: int = 1;
    mtex: MTex[18] = [
    ];
    nodetree: bNodeTree = null;
    color_modifiers: ListBase<unknown>[] = null;
    alpha_modifiers: ListBase<unknown>[] = null;
    thickness_modifiers: ListBase<unknown>[] = null;
    geometry_modifiers: ListBase<LineStyleGeometryModifier_Sampling>[?] = [
        LineStyleGeometryModifier_Sampling (@2196467339688) {
            modifier: LineStyleModifier {
                next: LineStyleModifier = null;
                prev: LineStyleModifier = null;
                name: char[64] = "Sampling";
                type: int = 5;
                influence: float = 1;
                flags: int = 3;
                blend: int = 0;
            }
            sampling: float = 10;
        }
    ];
}
Material (code:MA|@2196464844424) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MADots Stroke";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 418;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 0;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 0;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 0;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 0;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = null;
    ipo: Ipo = null;
    preview: PreviewImage = null;
    line_col: float[4] = [0.0, 0.0, 0.0, 0.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0.5;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = MaterialGPencilStyle (@2196476724072) {
        sima: Image = null;
        ima: Image = null;
        stroke_rgba: float[4] = [0.0, 0.0, 0.0, 1.0];
        fill_rgba: float[4] = [0.0, 0.0, 0.0, 1.0];
        mix_rgba: float[4] = [1.0, 1.0, 1.0, 1.0];
        flag: short = 256;
        index: short = 0;
        stroke_style: short = 0;
        fill_style: short = 0;
        mix_factor: float = 0.5;
        gradient_angle: float = 0;
        gradient_radius: float = 0;
        gradient_scale: float[2] = [0.0, 0.0];
        gradient_shift: float[2] = [0.0, 0.0];
        texture_angle: float = 0;
        texture_scale: float[2] = [1.0, 1.0];
        texture_offset: float[2] = [-0.5, 0.0];
        texture_opacity: float = 0;
        texture_pixsize: float = 100;
        mode: int = 1;
        gradient_type: int = 0;
        mix_stroke_factor: float = 0;
        alignment_mode: int = 0;
        alignment_rotation: float = 0;
    }
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
Material (code:MA|@2196382760584) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAGlass";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 419;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 1;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 0;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 0;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 0;
    roughness: float = 0.4;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476090376) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 420;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382760584);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64145, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382757896) {
                next: bNode = (@2196382757512);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476089736) {
                        next: bNodeSocket = (@2196476089096);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371400) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382757512) {
                                next: bNode = null;
                                prev: bNode = (@2196382757896);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196476087176) {
                                        next: bNodeSocket = (@2196476086536);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Color";
                                        name: char[64] = "Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981448) {
                                            value: float[4] = [0.8554697, 0.85361946, 1.0, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196476001672) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Glass BSDF";
                                identifier: int = 2041143826;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfGlass";
                                typeinfo: bNodeType = null;
                                type: short = 134;
                                custom1: short = 4;
                                custom2: short = 0;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 174.82753;
                                locy: float = 378.78973;
                                width: float = 150;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 0;
                                panel_states_array: bNodePanelState = null;
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382757896);
                            fromsock: bNodeSocket = (@2196476001672);
                            tosock: bNodeSocket = (@2196476089736);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 358527342;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 493.64825;
                locy: float = 339.06366;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371400,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718648) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [0, 1];
        changed_timestamp: short[2] = [4923, 5990];
        rect: int[2] = [
            DrawDataList (@2196467750408) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 0.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0.5;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 2;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
Material (code:MA|@2196382757128) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "MAMaterial";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 421;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    adt: AnimData = null;
    flag: short = 1;
    r: float = 0.8;
    g: float = 0.8;
    b: float = 0.8;
    a: float = 1;
    specr: float = 1;
    specg: float = 1;
    specb: float = 1;
    alpha: float = 1;
    ray_mirror: float = 0;
    spec: float = 0.5;
    gloss_mir: float = 1;
    roughness: float = 0.5;
    metallic: float = 0;
    use_nodes: char = 1;
    pr_type: char = 1;
    pr_texture: short = 0;
    pr_flag: short = 0;
    index: short = 0;
    nodetree: bNodeTree = bNodeTree (@2196476001032) {
        id: ID {
            next: void = null;
            prev: void = null;
            newid: ID = null;
            lib: Library = null;
            asset_data: AssetMetaData = null;
            name: char[66] = "NTShader Nodetree";
            flag: short = 1024;
            tag: int = 0;
            us: int = 0;
            icon_id: int = 0;
            recalc: int = 0;
            recalc_up_to_undo_push: int = 0;
            recalc_after_undo_push: int = 0;
            session_uuid: int = 422;
            properties: IDProperty = null;
            override_library: IDOverrideLibrary = null;
            orig_id: ID = null;
            py_instance: void = null;
            library_weak_reference: LibraryWeakReference = null;
            runtime: ID_Runtime {
                remap: ID_Runtime_Remap {
                    status: int = 0;
                    skipped_refcounted: int = 0;
                    skipped_direct: int = 0;
                    skipped_indirect: int = 0;
                }
            }
        }
        adt: AnimData = null;
        owner_id: ID = (@2196382757128);
        typeinfo: bNodeTreeType = null;
        idname: char[64] = "ShaderNodeTree";
        gpd: bGPdata = null;
        view_center: float[2] = [223.64142, 148.3964];
        nodes: ListBase<bNode>[?] = [
            bNode (@2196382756744) {
                next: bNode = (@2196382756360);
                prev: bNode = null;
                inputs: ListBase<bNodeSocket>[?] = [
                    bNodeSocket (@2196476000392) {
                        next: bNodeSocket = (@2196475999752);
                        prev: bNodeSocket = null;
                        prop: IDProperty = null;
                        identifier: char[64] = "Surface";
                        name: char[64] = "Surface";
                        storage: void = null;
                        type: short = 3;
                        flag: short = 68;
                        limit: short = 1;
                        in_out: short = 1;
                        typeinfo: bNodeSocketType = null;
                        idname: char[64] = "NodeSocketShader";
                        default_value: void = null;
                        stack_index: short = 0;
                        display_shape: char = 0;
                        attribute_domain: char = 0;
                        label: char[64] = "";
                        short_label: char[64] = "";
                        description: char[64] = "";
                        default_attribute_name: char = null;
                        own_index: int = 0;
                        to_index: int = 0;
                        link: bNodeLink = bNodeLink (@2196477371208) {
                            next: bNodeLink = null;
                            prev: bNodeLink = null;
                            fromnode: bNode = bNode (@2196382756360) {
                                next: bNode = null;
                                prev: bNode = (@2196382756744);
                                inputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475997832) {
                                        next: bNodeSocket = (@2196475997192);
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "Base Color";
                                        name: char[64] = "Base Color";
                                        storage: void = null;
                                        type: short = 2;
                                        flag: short = 64;
                                        limit: short = 1;
                                        in_out: short = 1;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketColor";
                                        default_value: void = bNodeSocketValueRGBA (@2196476981224) {
                                            value: float[4] = [0.01402097, 0.017105633, 0.030481603, 1.0];
                                        }
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                outputs: ListBase<bNodeSocket>[?] = [
                                    bNodeSocket (@2196475963144) {
                                        next: bNodeSocket = null;
                                        prev: bNodeSocket = null;
                                        prop: IDProperty = null;
                                        identifier: char[64] = "BSDF";
                                        name: char[64] = "BSDF";
                                        storage: void = null;
                                        type: short = 3;
                                        flag: short = 68;
                                        limit: short = 4095;
                                        in_out: short = 2;
                                        typeinfo: bNodeSocketType = null;
                                        idname: char[64] = "NodeSocketShader";
                                        default_value: void = null;
                                        stack_index: short = 0;
                                        display_shape: char = 0;
                                        attribute_domain: char = 0;
                                        label: char[64] = "";
                                        short_label: char[64] = "";
                                        description: char[64] = "";
                                        default_attribute_name: char = null;
                                        own_index: int = 0;
                                        to_index: int = 0;
                                        link: bNodeLink = null;
                                        ns: bNodeStack {
                                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                                            min: float = 0;
                                            max: float = 0;
                                            data: void = null;
                                            hasinput: short = 0;
                                            hasoutput: short = 0;
                                            datatype: short = 0;
                                            sockettype: short = 0;
                                            is_copy: short = 0;
                                            external: short = 0;
                                        }
                                        runtime: bNodeSocketRuntimeHandle = null;
                                    }
                                ];
                                name: char[64] = "Principled BSDF";
                                identifier: int = 132449552;
                                flag: int = 65554;
                                idname: char[64] = "ShaderNodeBsdfPrincipled";
                                typeinfo: bNodeType = null;
                                type: short = 193;
                                custom1: short = 4;
                                custom2: short = 4;
                                custom3: float = 0;
                                custom4: float = 0;
                                id: ID = null;
                                storage: void = null;
                                prop: IDProperty = null;
                                parent: bNode = null;
                                locx: float = 10;
                                locy: float = 300;
                                width: float = 240;
                                height: float = 100;
                                offsetx: float = 0;
                                offsety: float = 0;
                                label: char[64] = "";
                                color: float[3] = [0.608, 0.608, 0.608];
                                num_panel_states: int = 6;
                                panel_states_array: bNodePanelState[6] = [
                                    bNodePanelState {
                                        identifier: int = 8;
                                        flag: char = 5;
                                    }
                                ];
                                runtime: bNodeRuntimeHandle = null;
                            }
                            tonode: bNode = (@2196382756744);
                            fromsock: bNodeSocket = (@2196475963144);
                            tosock: bNodeSocket = (@2196476000392);
                            flag: int = 2;
                            multi_input_socket_index: int = 0;
                        }
                        ns: bNodeStack {
                            vec: float[4] = [0.0, 0.0, 0.0, 0.0];
                            min: float = 0;
                            max: float = 0;
                            data: void = null;
                            hasinput: short = 0;
                            hasoutput: short = 0;
                            datatype: short = 0;
                            sockettype: short = 0;
                            is_copy: short = 0;
                            external: short = 0;
                        }
                        runtime: bNodeSocketRuntimeHandle = null;
                    }
                ];
                outputs: ListBase<unknown>[] = null;
                name: char[64] = "Material Output";
                identifier: int = 156502014;
                flag: int = 65602;
                idname: char[64] = "ShaderNodeOutputMaterial";
                typeinfo: bNodeType = null;
                type: short = 124;
                custom1: short = 0;
                custom2: short = 0;
                custom3: float = 0;
                custom4: float = 0;
                id: ID = null;
                storage: void = null;
                prop: IDProperty = null;
                parent: bNode = null;
                locx: float = 300;
                locy: float = 300;
                width: float = 140;
                height: float = 100;
                offsetx: float = 0;
                offsety: float = 0;
                label: char[64] = "";
                color: float[3] = [0.608, 0.608, 0.608];
                num_panel_states: int = 0;
                panel_states_array: bNodePanelState = null;
                runtime: bNodeRuntimeHandle = null;
            }
        ];
        links: ListBase<bNodeLink>[?] = [
            @2196477371208,
        ];
        type: int = 0;
        cur_index: int = 0;
        flag: int = 0;
        edit_quality: short = 0;
        render_quality: short = 0;
        chunksize: int = 0;
        execution_mode: int = 0;
        viewer_border: rctf {
            xmin: float = 0;
            xmax: float = 0;
            ymin: float = 0;
            ymax: float = 0;
        }
        inputs: ListBase<unknown>[] = null;
        outputs: ListBase<unknown>[] = null;
        tree_interface: bNodeTreeInterface {
            root_panel: bNodeTreeInterfacePanel {
                item: bNodeTreeInterfaceItem {
                    item_type: char = 0;
                }
                name: char = null;
                description: char = null;
                flag: int = 2;
                items_array: bNodeTreeInterfaceItem[] = null;
                items_num: int = 0;
                identifier: int = 0;
            }
            active_index: int = 0;
            next_uid: int = 0;
            runtime: bNodeTreeInterfaceRuntimeHandle = null;
        }
        previews: bNodeInstanceHash = null;
        active_viewer_key: bNodeInstanceKey {
            value: int = 5381;
        }
        nested_node_refs_num: int = 0;
        nested_node_refs: bNestedNodeRef = null;
        geometry_node_asset_traits: GeometryNodeAssetTraits = null;
        preview: PreviewImage = null;
        runtime: bNodeTreeRuntimeHandle = null;
    }
    ipo: Ipo = null;
    preview: PreviewImage = PreviewImage (@2196476718568) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [1, 1];
        changed_timestamp: short[2] = [1243, 1243];
        rect: int[2] = [
            DrawDataList (@2196475980552) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    line_col: float[4] = [0.0, 0.0, 0.0, 1.0];
    line_priority: short = 0;
    vcol_alpha: short = 0;
    paint_active_slot: short = 0;
    paint_clone_slot: short = 0;
    tot_slots: short = 0;
    alpha_threshold: float = 0;
    refract_depth: float = 0;
    blend_method: char = 0;
    blend_shadow: char = 1;
    blend_flag: char = 0;
    texpaintslot: TexPaintSlot = null;
    gpumaterial: ListBase<unknown>[] = null;
    gp_style: MaterialGPencilStyle = null;
    lineart: MaterialLineArt {
        flags: int = 0;
        transparency_mask: char = 0;
        mat_occlusion: char = 1;
        intersection_priority: char = 0;
    }
}
Image (code:IM|@2196475933192) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "IMRender Result";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 423;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    name: char[1024] = "";
    cache: MovieCache = null;
    gputexture: GPUTexture[3, 2] = [
    ];
    anims: ListBase<unknown>[] = null;
    rr: RenderResult = null;
    renderslots: ListBase<RenderSlot>[?] = [
        RenderSlot (@2196477356328) {
            next: RenderSlot = (@2196477356232);
            prev: RenderSlot = null;
            name: char[64] = "Slot 1";
            render: RenderResult = null;
        }
    ];
    render_slot: short = 0;
    last_render_slot: short = 0;
    flag: int = 2048;
    source: short = 5;
    type: short = 4;
    lastframe: int = 0;
    gpuframenr: int = 0;
    gpuflag: short = 0;
    gpu_pass: short = 0;
    gpu_layer: short = 0;
    gpu_view: short = 0;
    seam_margin: short = 8;
    packedfile: PackedFile = null;
    packedfiles: ListBase<unknown>[] = null;
    preview: PreviewImage = PreviewImage (@2196476718488) {
        w: int[2] = [32, 0];
        h: int[2] = [32, 0];
        flag: short[2] = [0, 1];
        changed_timestamp: short[2] = [0, 0];
        rect: int[2] = [
            DrawDataList (@2196475975176) {
                first: DrawData = null;
                last: DrawData = null;
            }
        ];
        gputexture: GPUTexture[2] = [
        ];
        icon_id: int = 0;
        tag: short = 0;
    }
    lastused: int = 0;
    gen_x: int = 1024;
    gen_y: int = 1024;
    gen_type: char = 1;
    gen_flag: char = 0;
    gen_depth: short = 0;
    gen_color: float[4] = [0.0, 0.0, 0.0, 0.0];
    aspx: float = 1;
    aspy: float = 1;
    colorspace_settings: ColorManagedColorspaceSettings {
        name: char[64] = "";
    }
    alpha_mode: char = 0;
    eye: char = 0;
    views_format: char = 0;
    offset_x: int = 0;
    offset_y: int = 0;
    active_tile_index: int = 0;
    tiles: ListBase<ImageTile>[?] = [
        ImageTile (@2196476723912) {
            next: ImageTile = null;
            prev: ImageTile = null;
            runtime: ImageTile_Runtime {
                tilearray_layer: int = 0;
                tilearray_offset: int[2] = [0, 0];
                tilearray_size: int[2] = [0, 0];
            }
            tile_number: int = 1001;
            gen_x: int = 1024;
            gen_y: int = 1024;
            gen_type: char = 1;
            gen_flag: char = 0;
            gen_depth: short = 0;
            gen_color: float[4] = [0.0, 0.0, 0.0, 0.0];
            label: char[64] = "";
        }
    ];
    views: ListBase<unknown>[] = null;
    stereo3d_format: Stereo3dFormat = Stereo3dFormat (@2196373804936) {
        flag: short = 0;
        display_mode: char = 0;
        anaglyph_type: char = 0;
        interlace_type: char = 0;
    }
    runtime: Image_Runtime {
        cache_mutex: void = null;
        partial_update_register: PartialUpdateRegister = null;
        partial_update_user: PartialUpdateUser = null;
    }
}
bAction (code:AC|@2196475951880) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "ACOpen Door.002";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 424;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    curves: ListBase<FCurve>[?] = [
        FCurve (@2196476770568) {
            next: FCurve = (@2196476770440);
            prev: FCurve = null;
            grp: bActionGroup = bActionGroup (@2196476770184) {
                next: bActionGroup = null;
                prev: bActionGroup = null;
                channels: ListBase<FCurve>[?] = [
                    @2196476770568,
                ];
                flag: int = 3;
                customCol: int = 0;
                name: char[64] = "Object Transforms";
                cs: ThemeWireColor {
                    solid: char[4] = "";
                    select: char[4] = "";
                    active: char[4] = "";
                    flag: short = 0;
                }
            }
            driver: ChannelDriver = null;
            modifiers: ListBase<unknown>[] = null;
            bezt: BezTriple[2] = [
                BezTriple {
                    vec: float[3, 3] = [-6.6666665, -0.437158, 0.0, 0.0, -0.437158, 0.0, 6.6666665, -0.437158, 0.0];
                    alfa: float = 0;
                    weight: float = 0;
                    radius: float = 0;
                    ipo: char = 2;
                    h1: uchar = 4;
                    h2: uchar = 4;
                    f1: uchar = 0;
                    f2: uchar = 0;
                    f3: uchar = 0;
                    hide: char = 0;
                    easing: char = 0;
                    back: float = 1.70158;
                    amplitude: float = 0.8;
                    period: float = 4.1;
                    auto_handle_type: char = 1;
                }
            ];
            fpt: FPoint = null;
            totvert: int = 2;
            active_keyframe_index: int = 1;
            curval: float = -0.4809164;
            flag: short = 1;
            extend: short = 0;
            auto_smoothing: char = 1;
            array_index: int = 0;
            rna_path: char = DrawDataList (@2196476980328) {
                first: DrawData = null;
                last: DrawData = null;
            }
            color_mode: int = 1;
            color: float[3] = [0.0, 0.0, 0.0];
            prev_norm_factor: float = 0;
            prev_offset: float = 0;
        }
    ];
    chanbase: ListBase<unknown>[] = null;
    groups: ListBase<bActionGroup>[?] = [
        @2196476770184,
    ];
    markers: ListBase<unknown>[] = null;
    flag: int = 0;
    active_marker: int = 0;
    idroot: int = 16975;
    frame_start: float = 0;
    frame_end: float = 0;
    preview: PreviewImage = null;
}
bAction (code:AC|@2196475951560) {
    id: ID {
        next: void = null;
        prev: void = null;
        newid: ID = null;
        lib: Library = null;
        asset_data: AssetMetaData = null;
        name: char[66] = "ACOpen Door.003";
        flag: short = 0;
        tag: int = 0;
        us: int = 0;
        icon_id: int = 0;
        recalc: int = 0;
        recalc_up_to_undo_push: int = 0;
        recalc_after_undo_push: int = 0;
        session_uuid: int = 425;
        properties: IDProperty = null;
        override_library: IDOverrideLibrary = null;
        orig_id: ID = null;
        py_instance: void = null;
        library_weak_reference: LibraryWeakReference = null;
        runtime: ID_Runtime {
            remap: ID_Runtime_Remap {
                status: int = 0;
                skipped_refcounted: int = 0;
                skipped_direct: int = 0;
                skipped_indirect: int = 0;
            }
        }
    }
    curves: ListBase<FCurve>[?] = [
        FCurve (@2196476770056) {
            next: FCurve = (@2196476769928);
            prev: FCurve = null;
            grp: bActionGroup = bActionGroup (@2196476769672) {
                next: bActionGroup = null;
                prev: bActionGroup = null;
                channels: ListBase<FCurve>[?] = [
                    @2196476770056,
                ];
                flag: int = 1;
                customCol: int = 0;
                name: char[64] = "Object Transforms";
                cs: ThemeWireColor {
                    solid: char[4] = "";
                    select: char[4] = "";
                    active: char[4] = "";
                    flag: short = 0;
                }
            }
            driver: ChannelDriver = null;
            modifiers: ListBase<unknown>[] = null;
            bezt: BezTriple[2] = [
                BezTriple {
                    vec: float[3, 3] = [-6.6666665, 0.43757352, 0.0, 0.0, 0.43757352, 0.0, 6.6666665, 0.43757352, 0.0];
                    alfa: float = 0;
                    weight: float = 0;
                    radius: float = 0;
                    ipo: char = 2;
                    h1: uchar = 4;
                    h2: uchar = 4;
                    f1: uchar = 0;
                    f2: uchar = 0;
                    f3: uchar = 0;
                    hide: char = 0;
                    easing: char = 0;
                    back: float = 1.70158;
                    amplitude: float = 0.8;
                    period: float = 4.1;
                    auto_handle_type: char = 1;
                }
            ];
            fpt: FPoint = null;
            totvert: int = 2;
            active_keyframe_index: int = 1;
            curval: float = 0;
            flag: short = 3;
            extend: short = 0;
            auto_smoothing: char = 1;
            array_index: int = 0;
            rna_path: char = DrawDataList (@2196476980232) {
                first: DrawData = null;
                last: DrawData = null;
            }
            color_mode: int = 1;
            color: float[3] = [0.0, 0.0, 0.0];
            prev_norm_factor: float = 0;
            prev_offset: float = 0;
        }
    ];
    chanbase: ListBase<unknown>[] = null;
    groups: ListBase<bActionGroup>[?] = [
        @2196476769672,
    ];
    markers: ListBase<unknown>[] = null;
    flag: int = 0;
    active_marker: int = 0;
    idroot: int = 16975;
    frame_start: float = 0;
    frame_end: float = 0;
    preview: PreviewImage = null;
}

